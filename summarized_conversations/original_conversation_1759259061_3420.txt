{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="docs/CLOUD_INFRASTRUCTURE.md">\n# HoloVitals Cloud Infrastructure Architecture\n\n## HIPAA-Compliant Cloud Providers\n\n### Primary Provider: Microsoft Azure\n\n**Azure Health Data Services**\n- Purpose-built for healthcare applications\n- HIPAA, HITRUST, ISO 27001 certified\n- Built-in PHI protection\n- Comprehensive audit logging\n- Business Associate Agreement (BAA) included\n\n**Key Services:**\n1. **Azure Health Data Services** - FHIR API, DICOM services\n2. **Azure Virtual Machines** - GPU instances for ML models\n3. **Azure Kubernetes Service (AKS)** - Container orchestration\n4. **Azure Key Vault** - Secrets management\n5. **Azure Monitor** - Logging and monitoring\n6. **Azure Storage** - Encrypted blob storage\n7. **Azure SQL Database** - HIPAA-compliant database\n\n### Secondary Provider: Amazon Web Services (AWS)\n\n**AWS HealthLake**\n- HIPAA-eligible services\n- Comprehensive compliance certifications\n- BAA available\n- Healthcare-specific features\n\n**Key Services:**\n1. **AWS HealthLake** - Healthcare data lake\n2. **Amazon EC2** - GPU instances (P3, P4 families)\n3. **Amazon EKS** - Kubernetes service\n4. **AWS Secrets Manager** - Secrets management\n5. **Amazon CloudWatch** - Monitoring\n6. **Amazon S3** - Encrypted storage\n7. **Amazon RDS** - HIPAA-compliant database\n\n## Infrastructure Architecture\n\n```\n┌─────────────────────────────────────────────────────────────────┐\n│                         User Layer                               │\n│                    (Next.js Frontend)                            │\n└────────────────────────────┬────────────────────────────────────┘\n                             │ HTTPS/TLS 1.3\n                             │\n┌────────────────────────────┴────────────────────────────────────┐\n│                    API Gateway Layer                             │\n│              (Azure API Management / AWS API Gateway)            │\n│                                                                   │\n│  • Rate limiting                                                 │\n│  • Authentication (JWT)                                          │\n│  • Request validation                                            │\n│  • Logging                                                       │\n└────────────────────────────┬────────────────────────────────────┘\n                             │\n                ┌────────────┴────────────┐\n                │                         │\n                ▼                         ▼\n┌───────────────────────────┐  ┌──────────────────────────────┐\n│   Application Layer       │  │   Analysis Layer             │\n│   (Always Running)        │  │   (Ephemeral)                │\n│                           │  │                              │\n│  • Next.js API Routes     │  │  • GPU Instances             │\n│  • Lightweight Chatbot    │  │  • LLM Models                │\n│  • Queue Management       │  │  • Analysis Engine           │\n│  • User Management        │  │                              │\n│  • Document Processing    │  │  Lifecycle: 5-30 minutes     │\n│                           │  │  Auto-terminate after use    │\n└───────────┬───────────────┘  └──────────────┬───────────────┘\n            │                                 │\n            └────────────┬────────────────────┘\n                         │\n┌────────────────────────┴────────────────────────────────────────┐\n│                      Data Layer                                  │\n│                                                                   │\n│  ┌──────────────┐  ┌──────────────┐  ┌──────────────┐          │\n│  │ PostgreSQL   │  │ Redis Cache  │  │ Blob Storage │          │\n│  │              │  │              │  │              │          │\n│  │ • User data  │  │ • Sessions   │  │ • Documents  │          │\n│  │ • Metadata   │  │ • Queue      │  │ • Results    │          │\n│  │ • Audit logs │  │ • Temp data  │  │ • Backups    │          │\n│  └──────────────┘  └──────────────┘  └──────────────┘          │\n│                                                                   │\n│  All data encrypted at rest (AES-256-GCM)                        │\n│  All data encrypted in transit (TLS 1.3)                         │\n└─────────────────────────────────────────────────────────────────┘\n```\n\n## Ephemeral Instance Architecture\n\n### Instance Lifecycle\n\n```\n1. PROVISIONING (2-3 minutes)\n   ├─ Create VM/Container\n   ├─ Load model weights from secure storage\n   ├─ Initialize GPU\n   └─ Health check\n\n2. READY (< 1 minute)\n   ├─ Accept analysis request\n   ├─ Load patient data (encrypted)\n   └─ Prepare context\n\n3. EXECUTING (5-25 minutes)\n   ├─ Run LLM inference\n   ├─ Generate analysis\n   └─ Validate results\n\n4. DEPROVISIONING (< 1 minute)\n   ├─ Save results to secure storage\n   ├─ Clear all PHI from memory\n   ├─ Terminate instance\n   └─ Log costs and metrics\n\nTotal Lifecycle: 8-30 minutes\n```\n\n### Instance Configuration\n\n**Small Analysis (< 10k tokens)**\n```yaml\nProvider: Azure\nInstance: Standard_NC6s_v3\nGPU: 1x NVIDIA Tesla V100\nvCPUs: 6\nRAM: 112 GB\nStorage: 736 GB SSD\nCost: $0.90/hour ($0.015/minute)\nModels: GPT-4, Llama 3 70B\n```\n\n**Medium Analysis (10k-50k tokens)**\n```yaml\nProvider: Azure\nInstance: Standard_NC12s_v3\nGPU: 2x NVIDIA Tesla V100\nvCPUs: 12\nRAM: 224 GB\nStorage: 1474 GB SSD\nCost: $1.80/hour ($0.030/minute)\nModels: GPT-4 Turbo, Claude 3 Sonnet\n```\n\n**Large Analysis (50k-200k tokens)**\n```yaml\nProvider: Azure\nInstance: Standard_NC24s_v3\nGPU: 4x NVIDIA Tesla V100\nvCPUs: 24\nRAM: 448 GB\nStorage: 2948 GB SSD\nCost: $3.60/hour ($0.060/minute)\nModels: Claude 3 Opus, GPT-4 Turbo\n```\n\n## Security Architecture\n\n### Network Security\n\n```\n┌─────────────────────────────────────────────────────────────────┐\n│                         Internet                                 │\n└────────────────────────────┬────────────────────────────────────┘\n                             │\n                             ▼\n┌─────────────────────────────────────────────────────────────────┐\n│                    WAF (Web Application Firewall)                │\n│  • DDoS protection                                               │\n│  • SQL injection prevention                                      │\n│  • XSS prevention                                                │\n└────────────────────────────┬────────────────────────────────────┘\n                             │\n                             ▼\n┌─────────────────────────────────────────────────────────────────┐\n│                    Load Balancer (HTTPS only)                    │\n└────────────────────────────┬────────────────────────────────────┘\n                             │\n                ┌────────────┴────────────┐\n                │                         │\n                ▼                         ▼\n┌───────────────────────────┐  ┌──────────────────────────────┐\n│   Public Subnet           │  │   Private Subnet             │\n│                           │  │                              │\n│  • API Gateway            │  │  • Application servers       │\n│  • Load balancers         │  │  • Database servers          │\n│                           │  │  • Analysis instances        │\n│  Internet-facing          │  │  No internet access          │\n└───────────────────────────┘  └──────────────────────────────┘\n```\n\n### Data Encryption\n\n**At Rest:**\n- AES-256-GCM encryption\n- Azure Key Vault / AWS KMS for key management\n- Separate keys per patient\n- Automatic key rotation (90 days)\n\n**In Transit:**\n- TLS 1.3 only\n- Perfect Forward Secrecy\n- Certificate pinning\n- HSTS enabled\n\n**In Memory:**\n- Encrypted memory for PHI\n- Secure enclaves where available\n- Memory scrubbing on deallocation\n\n### Access Control\n\n**Identity and Access Management (IAM)**\n```yaml\nRoles:\n  - Patient:\n      - Read own data\n      - Upload documents\n      - Request analysis\n      - Manage consent\n  \n  - Healthcare Provider:\n      - Read patient data (with consent)\n      - Request analysis\n      - View results\n      - Limited time access (max 72 hours)\n  \n  - System Administrator:\n      - Manage infrastructure\n      - View audit logs\n      - No access to PHI\n  \n  - Compliance Officer:\n      - View audit logs\n      - Generate compliance reports\n      - Manage access policies\n      - No access to PHI\n```\n\n**Multi-Factor Authentication (MFA)**\n- Required for all users\n- TOTP-based (Google Authenticator)\n- Backup codes provided\n- SMS fallback option\n\n## Monitoring and Logging\n\n### Azure Monitor Configuration\n\n```typescript\n// monitoring/azure-monitor-config.ts\n\ninterface MonitoringConfig {\n  logAnalyticsWorkspace: string;\n  applicationInsights: string;\n  alertRules: AlertRule[];\n  diagnosticSettings: DiagnosticSetting[];\n}\n\ninterface AlertRule {\n  name: string;\n  severity: \'Critical\' | \'Error\' | \'Warning\' | \'Informational\';\n  condition: string;\n  actions: string[];\n}\n\nconst monitoringConfig: MonitoringConfig = {\n  logAnalyticsWorkspace: \'holovitals-logs\',\n  applicationInsights: \'holovitals-insights\',\n  \n  alertRules: [\n    {\n      name: \'High Error Rate\',\n      severity: \'Critical\',\n      condition: \'error_rate > 5%\',\n      actions: [\'email-oncall\', \'sms-oncall\', \'pagerduty\']\n    },\n    {\n      name: \'Instance Provisioning Failure\',\n      severity: \'Error\',\n      condition: \'provisioning_failures > 3 in 10 minutes\',\n      actions: [\'email-oncall\', \'slack-alerts\']\n    },\n    {\n      name: \'High Analysis Queue\',\n      severity: \'Warning\',\n      condition: \'queue_length > 50\',\n      actions: [\'email-team\', \'slack-alerts\']\n    },\n    {\n      name: \'Suspicious Access Pattern\',\n      severity: \'Critical\',\n      condition: \'suspicious_access_detected\',\n      actions: [\'email-security\', \'sms-security\', \'block-user\']\n    }\n  ],\n  \n  diagnosticSettings: [\n    {\n      name: \'All Logs\',\n      logs: [\'AuditLogs\', \'SecurityLogs\', \'ApplicationLogs\'],\n      metrics: [\'AllMetrics\'],\n      retention: 365 // days\n    }\n  ]\n};\n```\n\n### Metrics to Track\n\n**Application Metrics:**\n- Request rate\n- Response time (p50, p95, p99)\n- Error rate\n- Active users\n- Queue length\n- Analysis completion time\n\n**Infrastructure Metrics:**\n- CPU utilization\n- Memory utilization\n- GPU utilization\n- Disk I/O\n- Network throughput\n- Instance count\n\n**Business Metrics:**\n- Documents uploaded per day\n- Analyses completed per day\n- Average analysis cost\n- User satisfaction scores\n- Time to analysis completion\n\n**Security Metrics:**\n- Failed login attempts\n- MFA failures\n- Suspicious access patterns\n- Data access frequency\n- Consent violations\n\n## Disaster Recovery\n\n### Backup Strategy\n\n**Database Backups:**\n- Automated daily backups\n- Point-in-time recovery (7 days)\n- Geo-redundant storage\n- Backup retention: 30 days\n\n**Document Storage Backups:**\n- Continuous replication to secondary region\n- Versioning enabled\n- Soft delete (30 days)\n- Backup retention: 90 days\n\n**Configuration Backups:**\n- Infrastructure as Code (Terraform)\n- Version controlled (Git)\n- Automated deployment pipelines\n\n### Recovery Time Objectives (RTO)\n\n| Component | RTO | RPO |\n|-----------|-----|-----|\n| Application | 15 minutes | 5 minutes |\n| Database | 30 minutes | 5 minutes |\n| Document Storage | 1 hour | 15 minutes |\n| Analysis System | 2 hours | 1 hour |\n\n### Disaster Recovery Plan\n\n**Scenario 1: Regional Outage**\n1. Detect outage (< 2 minutes)\n2. Failover to secondary region (< 5 minutes)\n3. Update DNS records (< 2 minutes)\n4. Verify functionality (< 5 minutes)\n5. Notify users (< 10 minutes)\n\n**Scenario 2: Data Corruption**\n1. Detect corruption (< 5 minutes)\n2. Identify last good backup (< 5 minutes)\n3. Restore from backup (< 30 minutes)\n4. Validate data integrity (< 15 minutes)\n5. Resume operations (< 60 minutes)\n\n**Scenario 3: Security Breach**\n1. Detect breach (< 1 minute)\n2. Isolate affected systems (< 2 minutes)\n3. Revoke compromised credentials (< 5 minutes)\n4. Investigate scope (< 30 minutes)\n5. Notify affected users (< 24 hours)\n6. Implement remediation (< 72 hours)\n\n## Cost Optimization\n\n### Reserved Instances\n\n**Always-On Components:**\n- Application servers: 3-year reserved instances (60% savings)\n- Database servers: 3-year reserved instances (60% savings)\n- Cache servers: 1-year reserved instances (40% savings)\n\n**Ephemeral Components:**\n- Analysis instances: On-demand or spot instances\n- Spot instances can save up to 90% but may be interrupted\n\n### Auto-Scaling\n\n**Application Layer:**\n```yaml\nMin Instances: 2\nMax Instances: 10\nScale Up: CPU > 70% for 5 minutes\nScale Down: CPU < 30% for 10 minutes\n```\n\n**Analysis Layer:**\n```yaml\nMin Instances: 0 (ephemeral)\nMax Instances: 20\nScale Up: Queue length > 10\nScale Down: Queue empty for 5 minutes\n```\n\n### Cost Monitoring\n\n**Budget Alerts:**\n- Daily budget: $1,000\n- Monthly budget: $25,000\n- Alert at 80%, 90%, 100% of budget\n\n**Cost Allocation Tags:**\n- Environment (production, staging, development)\n- Component (application, database, analysis)\n- User (for analysis costs)\n- Project (for feature development)\n\n## Compliance and Auditing\n\n### HIPAA Compliance Requirements\n\n**Administrative Safeguards:**\n✅ Security Management Process\n✅ Assigned Security Responsibility\n✅ Workforce Security\n✅ Information Access Management\n✅ Security Awareness and Training\n✅ Security Incident Procedures\n✅ Contingency Plan\n✅ Evaluation\n\n**Physical Safeguards:**\n✅ Facility Access Controls\n✅ Workstation Use\n✅ Workstation Security\n✅ Device and Media Controls\n\n**Technical Safeguards:**\n✅ Access Control\n✅ Audit Controls\n✅ Integrity\n✅ Person or Entity Authentication\n✅ Transmission Security\n\n### Audit Logging\n\n**What to Log:**\n- All PHI access (who, what, when, where, why)\n- Authentication events (login, logout, MFA)\n- Authorization events (access granted, denied)\n- Data modifications (create, update, delete)\n- System events (errors, warnings, failures)\n- Security events (suspicious activity, breaches)\n\n**Log Retention:**\n- Security logs: 7 years\n- Audit logs: 7 years\n- Application logs: 1 year\n- Debug logs: 30 days\n\n**Log Analysis:**\n- Real-time anomaly detection\n- Daily compliance reports\n- Weekly security reviews\n- Monthly audit reports\n- Quarterly compliance audits\n\n## Infrastructure as Code\n\n### Terraform Configuration\n\n```hcl\n# terraform/main.tf\n\nterraform {\n  required_version = ">= 1.0"\n  \n  required_providers {\n    azurerm = {\n      source  = "hashicorp/azurerm"\n      version = "~> 3.0"\n    }\n  }\n  \n  backend "azurerm" {\n    resource_group_name  = "holovitals-terraform"\n    storage_account_name = "holovitalstfstate"\n    container_name       = "tfstate"\n    key                  = "production.tfstate"\n  }\n}\n\nprovider "azurerm" {\n  features {\n    key_vault {\n      purge_soft_delete_on_destroy = false\n    }\n  }\n}\n\n# Resource Group\nresource "azurerm_resource_group" "main" {\n  name     = "holovitals-production"\n  location = "East US"\n  \n  tags = {\n    Environment = "Production"\n    Compliance  = "HIPAA"\n    ManagedBy   = "Terraform"\n  }\n}\n\n# Virtual Network\nresource "azurerm_virtual_network" "main" {\n  name                = "holovitals-vnet"\n  address_space       = ["10.0.0.0/16"]\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n}\n\n# Subnets\nresource "azurerm_subnet" "public" {\n  name                 = "public-subnet"\n  resource_group_name  = azurerm_resource_group.main.name\n  virtual_network_name = azurerm_virtual_network.main.name\n  address_prefixes     = ["10.0.1.0/24"]\n}\n\nresource "azurerm_subnet" "private" {\n  name                 = "private-subnet"\n  resource_group_name  = azurerm_resource_group.main.name\n  virtual_network_name = azurerm_virtual_network.main.name\n  address_prefixes     = ["10.0.2.0/24"]\n}\n\n# Key Vault\nresource "azurerm_key_vault" "main" {\n  name                = "holovitals-kv"\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n  tenant_id           = data.azurerm_client_config.current.tenant_id\n  sku_name            = "premium"\n  \n  enabled_for_disk_encryption = true\n  purge_protection_enabled    = true\n  soft_delete_retention_days  = 90\n  \n  network_acls {\n    default_action = "Deny"\n    bypass         = "AzureServices"\n  }\n}\n\n# PostgreSQL Database\nresource "azurerm_postgresql_flexible_server" "main" {\n  name                = "holovitals-db"\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n  \n  sku_name   = "GP_Standard_D4s_v3"\n  storage_mb = 131072\n  version    = "14"\n  \n  backup_retention_days        = 30\n  geo_redundant_backup_enabled = true\n  \n  high_availability {\n    mode = "ZoneRedundant"\n  }\n}\n\n# Storage Account\nresource "azurerm_storage_account" "main" {\n  name                     = "holovitalsstorage"\n  resource_group_name      = azurerm_resource_group.main.name\n  location                 = azurerm_resource_group.main.location\n  account_tier             = "Standard"\n  account_replication_type = "GRS"\n  \n  enable_https_traffic_only = true\n  min_tls_version          = "TLS1_3"\n  \n  blob_properties {\n    versioning_enabled = true\n    \n    delete_retention_policy {\n      days = 30\n    }\n  }\n}\n\n# Container Registry\nresource "azurerm_container_registry" "main" {\n  name                = "holovitalsregistry"\n  resource_group_name = azurerm_resource_group.main.name\n  location            = azurerm_resource_group.main.location\n  sku                 = "Premium"\n  admin_enabled       = false\n  \n  georeplications {\n    location = "West US"\n  }\n}\n\n# Kubernetes Cluster\nresource "azurerm_kubernetes_cluster" "main" {\n  name                = "holovitals-aks"\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n  dns_prefix          = "holovitals"\n  \n  default_node_pool {\n    name       = "default"\n    node_count = 3\n    vm_size    = "Standard_D4s_v3"\n    \n    enable_auto_scaling = true\n    min_count          = 2\n    max_count          = 10\n  }\n  \n  identity {\n    type = "SystemAssigned"\n  }\n  \n  network_profile {\n    network_plugin = "azure"\n    network_policy = "calico"\n  }\n}\n\n# Log Analytics Workspace\nresource "azurerm_log_analytics_workspace" "main" {\n  name                = "holovitals-logs"\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n  sku                 = "PerGB2018"\n  retention_in_days   = 365\n}\n\n# Application Insights\nresource "azurerm_application_insights" "main" {\n  name                = "holovitals-insights"\n  location            = azurerm_resource_group.main.location\n  resource_group_name = azurerm_resource_group.main.name\n  workspace_id        = azurerm_log_analytics_workspace.main.id\n  application_type    = "web"\n}\n```\n\n## Deployment Pipeline\n\n### CI/CD Workflow\n\n```yaml\n# .github/workflows/deploy.yml\n\nname: Deploy to Production\n\non:\n  push:\n    branches: [main]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n        with:\n          node-version: \'18\'\n      - run: npm ci\n      - run: npm run test\n      - run: npm run lint\n      - run: npm run type-check\n\n  build:\n    needs: test\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: docker/build-push-action@v4\n        with:\n          push: true\n          tags: holovitalsregistry.azurecr.io/app:${{ github.sha }}\n\n  deploy:\n    needs: build\n    runs-on: ubuntu-latest\n    steps:\n      - uses: azure/login@v1\n        with:\n          creds: ${{ secrets.AZURE_CREDENTIALS }}\n      \n      - name: Deploy to AKS\n        run: |\n          az aks get-credentials --resource-group holovitals-production --name holovitals-aks\n          kubectl set image deployment/app app=holovitalsregistry.azurecr.io/app:${{ github.sha }}\n          kubectl rollout status deployment/app\n\n  verify:\n    needs: deploy\n    runs-on: ubuntu-latest\n    steps:\n      - name: Health Check\n        run: |\n          curl -f https://api.holovitals.com/health || exit 1\n      \n      - name: Smoke Tests\n        run: |\n          npm run test:smoke\n```\n\n## Summary\n\nThis cloud infrastructure provides:\n\n✅ **HIPAA Compliance** - Full compliance with all HIPAA requirements\n✅ **High Availability** - 99.9% uptime SLA\n✅ **Scalability** - Auto-scaling from 2 to 100+ instances\n✅ **Security** - Multi-layer security with encryption everywhere\n✅ **Cost Efficiency** - Ephemeral instances, reserved capacity, spot instances\n✅ **Disaster Recovery** - RTO < 15 minutes, RPO < 5 minutes\n✅ **Monitoring** - Real-time monitoring and alerting\n✅ **Audit Logging** - Complete audit trail for compliance\n✅ **Infrastructure as Code** - Reproducible, version-controlled infrastructure\n\n**Estimated Monthly Cost:** $7,000-$25,000 depending on usage\n**Setup Time:** 2-3 weeks\n**Maintenance:** Automated with minimal manual intervention\n</create-file>\n</function_calls>'}