{'role': 'assistant', 'content': '<function_calls>\n<str-replace file_path="medical-analysis-platform/prisma/schema.prisma">\n<old_str>model AnalysisTask {\n  id                String        @id @default(uuid())\n  userId            String\n  user              User          @relation(fields: [userId], references: [id], onDelete: Cascade)\n  \n  taskType          String        // DOCUMENT_ANALYSIS, CHAT_RESPONSE, BATCH_PROCESSING, REPORT_GENERATION\n  priority          String        // URGENT, HIGH, NORMAL, LOW\n  status            String        // PENDING, PROCESSING, COMPLETED, FAILED, CANCELLED\n  \n  inputData         Json          // Task-specific input data\n  outputData        Json?         // Task results\n  errorMessage      String?       // Error details if failed\n  \n  progress          Int           @default(0) // 0-100\n  estimatedDuration Int?          // Estimated duration in seconds\n  actualDuration    Int?          // Actual duration in seconds\n  \n  retryCount        Int           @default(0)\n  maxRetries        Int           @default(3)\n  \n  startedAt         DateTime?\n  completedAt       DateTime?\n  createdAt         DateTime      @default(now())\n  updatedAt         DateTime      @updatedAt\n  \n  @@index([userId])\n  @@index([status])\n  @@index([priority])\n  @@index([taskType])\n  @@index([createdAt])\n}</old_str>\n<new_str>model AnalysisTask {\n  id                String        @id @default(uuid())\n  userId            String\n  user              User          @relation(fields: [userId], references: [id], onDelete: Cascade)\n  \n  taskType          String        // DOCUMENT_ANALYSIS, CHAT_RESPONSE, BATCH_PROCESSING, REPORT_GENERATION\n  priority          String        // URGENT, HIGH, NORMAL, LOW\n  status            String        // PENDING, PROCESSING, COMPLETED, FAILED, CANCELLED\n  \n  inputData         Json          // Task-specific input data\n  outputData        Json?         // Task results\n  errorMessage      String?       // Error details if failed\n  \n  progress          Int           @default(0) // 0-100\n  estimatedDuration Int?          // Estimated duration in seconds\n  actualDuration    Int?          // Actual duration in seconds\n  \n  retryCount        Int           @default(0)\n  maxRetries        Int           @default(3)\n  \n  startedAt         DateTime?\n  completedAt       DateTime?\n  createdAt         DateTime      @default(now())\n  updatedAt         DateTime      @updatedAt\n  \n  // Relations\n  cloudInstances    CloudInstance[]\n  \n  @@index([userId])\n  @@index([status])\n  @@index([priority])\n  @@index([taskType])\n  @@index([createdAt])\n}\n\nmodel CloudInstance {\n  id                  String    @id @default(uuid())\n  userId              String\n  user                User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  \n  taskId              String?\n  task                AnalysisTask? @relation(fields: [taskId], references: [id], onDelete: SetNull)\n  \n  // Cloud provider details\n  provider            String    // AZURE, AWS, GCP\n  instanceType        String    // e.g., Standard_NC6, p2.xlarge\n  region              String    // e.g., eastus, us-east-1\n  cloudInstanceId     String?   // Provider-specific instance ID\n  \n  // Network details\n  publicIp            String?\n  privateIp           String?\n  \n  // Status and lifecycle\n  status              String    // PROVISIONING, CONFIGURING, READY, RUNNING, STOPPING, TERMINATED, FAILED\n  \n  // Configuration\n  diskSizeGB          Int       @default(100)\n  autoTerminateMinutes Int      @default(60)\n  \n  // Cost tracking\n  costPerHour         Float\n  totalCost           Float     @default(0)\n  \n  // Purpose and metadata\n  purpose             String?\n  metadata            Json?\n  \n  // Timestamps\n  createdAt           DateTime  @default(now())\n  terminatedAt        DateTime?\n  updatedAt           DateTime  @updatedAt\n  \n  @@index([userId])\n  @@index([taskId])\n  @@index([status])\n  @@index([provider])\n  @@index([createdAt])\n}</new_str>\n</str-replace>\n</function_calls>'}