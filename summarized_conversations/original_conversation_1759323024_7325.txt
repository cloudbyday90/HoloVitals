{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="app/api/medical-standards/loinc/route.ts">\n/**\n * LOINC Code API Endpoints\n * \n * Provides access to LOINC codes for medical standardization\n */\n\nimport { NextRequest, NextResponse } from \'next/server\';\nimport { getMedicalStandardizationRepository } from \'@/lib/services/MedicalStandardizationRepository\';\n\nconst repository = getMedicalStandardizationRepository();\n\n/**\n * GET /api/medical-standards/loinc\n * Search LOINC codes\n */\nexport async function GET(request: NextRequest) {\n  try {\n    const searchParams = request.nextUrl.searchParams;\n    const query = searchParams.get(\'query\') || undefined;\n    const category = searchParams.get(\'category\') || undefined;\n    const componentType = searchParams.get(\'componentType\') || undefined;\n    const component = searchParams.get(\'component\') || undefined;\n    const system = searchParams.get(\'system\') || undefined;\n    const limit = parseInt(searchParams.get(\'limit\') || \'50\');\n    const offset = parseInt(searchParams.get(\'offset\') || \'0\');\n\n    const result = await repository.searchLOINCCodes({\n      query,\n      category: category as any,\n      componentType: componentType as any,\n      component,\n      system,\n      limit,\n      offset,\n    });\n\n    return NextResponse.json({\n      success: true,\n      data: result,\n    });\n  } catch (error: any) {\n    console.error(\'Error searching LOINC codes:\', error);\n    return NextResponse.json(\n      {\n        success: false,\n        error: error.message || \'Failed to search LOINC codes\',\n      },\n      { status: 500 }\n    );\n  }\n}\n</create-file>\n</function_calls>'}