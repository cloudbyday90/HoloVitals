{'role': 'assistant', 'content': 'Now let me start implementing the EHR integration system. I\'ll begin with Phase 1: FHIR Foundation & Architecture.\n\n## Step 1: Create Database Schema for EHR Data\n\n<function_calls>\n<str-replace file_path="medical-analysis-platform/prisma/schema.prisma">\n<old_str>  @@index([userId])\n  @@index([createdAt])\n  @@index([read])\n  @@map("system_notifications")\n}</old_str>\n<new_str>  @@index([userId])\n  @@index([createdAt])\n  @@index([read])\n  @@map("system_notifications")\n}\n\n// ============================================================================\n// EHR INTEGRATION & FHIR DATA\n// ============================================================================\n\nenum EHRProvider {\n  EPIC\n  CERNER\n  ALLSCRIPTS\n  ATHENAHEALTH\n  ECLINICALWORKS\n  NEXTGEN\n  MEDITECH\n  PRACTICE_FUSION\n  GREENWAY\n  OTHER\n}\n\nenum ConnectionStatus {\n  PENDING           // Awaiting user authorization\n  ACTIVE            // Connected and syncing\n  EXPIRED           // Token expired, needs reauth\n  REVOKED           // User revoked access\n  ERROR             // Connection error\n  DISCONNECTED      // User disconnected\n}\n\nenum SyncStatus {\n  IDLE              // Not syncing\n  QUEUED            // Queued for sync\n  SYNCING           // Currently syncing\n  COMPLETED         // Sync completed successfully\n  FAILED            // Sync failed\n  CANCELLED         // Sync cancelled by user\n}\n\nenum FHIRResourceType {\n  PATIENT\n  DOCUMENT_REFERENCE\n  OBSERVATION\n  CONDITION\n  MEDICATION_REQUEST\n  ALLERGY_INTOLERANCE\n  IMMUNIZATION\n  PROCEDURE\n  DIAGNOSTIC_REPORT\n  CARE_PLAN\n  ENCOUNTER\n  PRACTITIONER\n  ORGANIZATION\n  OTHER\n}\n\nmodel EHRConnection {\n  id                    String            @id @default(uuid())\n  userId                String            @map("user_id")\n  provider              EHRProvider\n  providerName          String            @map("provider_name") // e.g., "Kaiser Permanente"\n  fhirBaseUrl           String            @map("fhir_base_url")\n  status                ConnectionStatus  @default(PENDING)\n  \n  // OAuth tokens (encrypted)\n  accessToken           String?           @map("access_token") @db.Text\n  refreshToken          String?           @map("refresh_token") @db.Text\n  tokenExpiresAt        DateTime?         @map("token_expires_at")\n  \n  // Patient context\n  patientId             String?           @map("patient_id") // FHIR Patient ID\n  patientName           String?           @map("patient_name")\n  \n  // Sync settings\n  autoSync              Boolean           @default(true) @map("auto_sync")\n  syncFrequency         Int               @default(24) @map("sync_frequency") // hours\n  lastSyncAt            DateTime?         @map("last_sync_at")\n  nextSyncAt            DateTime?         @map("next_sync_at")\n  \n  // Metadata\n  metadata              String?           @db.Text // JSON: additional provider-specific data\n  errorMessage          String?           @db.Text @map("error_message")\n  createdAt             DateTime          @default(now()) @map("created_at")\n  updatedAt             DateTime          @updatedAt @map("updated_at")\n  \n  user                  User              @relation(fields: [userId], references: [id], onDelete: Cascade)\n  fhirResources         FHIRResource[]\n  syncHistory           SyncHistory[]\n  \n  @@index([userId])\n  @@index([status])\n  @@index([provider])\n  @@index([nextSyncAt])\n  @@map("ehr_connections")\n}\n\nmodel FHIRResource {\n  id                    String            @id @default(uuid())\n  connectionId          String            @map("connection_id")\n  resourceType          FHIRResourceType  @map("resource_type")\n  fhirId                String            @map("fhir_id") // Resource ID from FHIR server\n  fhirVersion           String            @default("R4") @map("fhir_version")\n  \n  // Raw FHIR data\n  rawData               String            @db.Text @map("raw_data") // JSON string of FHIR resource\n  \n  // Extracted metadata for quick access\n  title                 String?\n  description           String?           @db.Text\n  date                  DateTime?\n  category              String?\n  status                String?\n  \n  // Document-specific fields\n  contentType           String?           @map("content_type") // e.g., "application/pdf"\n  contentUrl            String?           @map("content_url") @db.Text\n  contentSize           Int?              @map("content_size") // bytes\n  documentDownloaded    Boolean           @default(false) @map("document_downloaded")\n  localFilePath         String?           @map("local_file_path")\n  \n  // Processing status\n  processed             Boolean           @default(false)\n  processedAt           DateTime?         @map("processed_at")\n  tokensUsed            Int?              @map("tokens_used")\n  \n  // Metadata\n  metadata              String?           @db.Text // JSON: additional resource-specific data\n  createdAt             DateTime          @default(now()) @map("created_at")\n  updatedAt             DateTime          @updatedAt @map("updated_at")\n  \n  connection            EHRConnection     @relation(fields: [connectionId], references: [id], onDelete: Cascade)\n  \n  @@unique([connectionId, fhirId, resourceType])\n  @@index([connectionId])\n  @@index([resourceType])\n  @@index([date])\n  @@index([processed])\n  @@map("fhir_resources")\n}\n\nmodel SyncHistory {\n  id                    String            @id @default(uuid())\n  connectionId          String            @map("connection_id")\n  status                SyncStatus        @default(QUEUED)\n  syncType              String            @default("incremental") @map("sync_type") // incremental, full\n  \n  // Sync metrics\n  startedAt             DateTime?         @map("started_at")\n  completedAt           DateTime?         @map("completed_at")\n  duration              Int?              // seconds\n  \n  // Resources synced\n  resourcesQueried      Int               @default(0) @map("resources_queried")\n  resourcesCreated      Int               @default(0) @map("resources_created")\n  resourcesUpdated      Int               @default(0) @map("resources_updated")\n  resourcesSkipped      Int               @default(0) @map("resources_skipped")\n  resourcesFailed       Int               @default(0) @map("resources_failed")\n  \n  // Documents downloaded\n  documentsDownloaded   Int               @default(0) @map("documents_downloaded")\n  totalBytesDownloaded  BigInt            @default(0) @map("total_bytes_downloaded")\n  \n  // Cost tracking\n  tokensEstimated       Int?              @map("tokens_estimated")\n  tokensUsed            Int?              @map("tokens_used")\n  costEstimated         Float?            @map("cost_estimated")\n  costActual            Float?            @map("cost_actual")\n  \n  // Error tracking\n  errorMessage          String?           @db.Text @map("error_message")\n  errorDetails          String?           @db.Text @map("error_details") // JSON\n  \n  // Metadata\n  metadata              String?           @db.Text // JSON: sync details, resource types synced, etc.\n  createdAt             DateTime          @default(now()) @map("created_at")\n  \n  connection            EHRConnection     @relation(fields: [connectionId], references: [id], onDelete: Cascade)\n  \n  @@index([connectionId])\n  @@index([status])\n  @@index([startedAt])\n  @@index([createdAt])\n  @@map("sync_history")\n}\n\nmodel ProviderConfiguration {\n  id                    String            @id @default(uuid())\n  provider              EHRProvider\n  providerName          String            @map("provider_name")\n  \n  // FHIR endpoints\n  fhirBaseUrl           String            @map("fhir_base_url")\n  authorizationUrl      String            @map("authorization_url")\n  tokenUrl              String            @map("token_url")\n  \n  // OAuth configuration\n  clientId              String?           @map("client_id")\n  clientSecret          String?           @map("client_secret")\n  redirectUri           String?           @map("redirect_uri")\n  scopes                String            // Space-separated scopes\n  \n  // Capabilities\n  supportsDocumentReference Boolean       @default(true) @map("supports_document_reference")\n  supportsObservation   Boolean           @default(true) @map("supports_observation")\n  supportsCondition     Boolean           @default(true) @map("supports_condition")\n  supportsMedication    Boolean           @default(true) @map("supports_medication")\n  supportsAllergy       Boolean           @default(true) @map("supports_allergy")\n  supportsImmunization  Boolean           @default(true) @map("supports_immunization")\n  supportsProcedure     Boolean           @default(true) @map("supports_procedure")\n  \n  // Rate limiting\n  rateLimit             Int?              @map("rate_limit") // requests per minute\n  \n  // Status\n  enabled               Boolean           @default(true)\n  isSandbox             Boolean           @default(false) @map("is_sandbox")\n  \n  // Metadata\n  metadata              String?           @db.Text // JSON: additional provider-specific config\n  createdAt             DateTime          @default(now()) @map("created_at")\n  updatedAt             DateTime          @updatedAt @map("updated_at")\n  \n  @@unique([provider, providerName])\n  @@index([provider])\n  @@index([enabled])\n  @@map("provider_configurations")\n}</new_str>\n</str-replace>\n</function_calls>'}