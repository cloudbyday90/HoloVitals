{'role': 'assistant', 'content': '<function_calls>\n<str-replace file_path="medical-analysis-platform/lib/providers/ProviderManager.ts">\n    <old_str>  // Initialize Claude if API key is present\n  if (process.env.ANTHROPIC_API_KEY) {\n    manager.registerProvider(\'claude-opus\', {\n      provider: AIProvider.CLAUDE,\n      apiKey: process.env.ANTHROPIC_API_KEY,\n      model: AIModel.CLAUDE_3_OPUS,\n      maxTokens: 4096,\n      temperature: 0.7\n    });\n\n    manager.registerProvider(\'claude-sonnet\', {\n      provider: AIProvider.CLAUDE,\n      apiKey: process.env.ANTHROPIC_API_KEY,\n      model: AIModel.CLAUDE_35_SONNET,\n      maxTokens: 4096,\n      temperature: 0.7\n    });\n\n    manager.registerProvider(\'claude-haiku\', {\n      provider: AIProvider.CLAUDE,\n      apiKey: process.env.ANTHROPIC_API_KEY,\n      model: AIModel.CLAUDE_3_HAIKU,\n      maxTokens: 4096,\n      temperature: 0.7\n    });\n  }\n\n  return manager;\n}</old_str>\n    <new_str>  // Initialize Claude if API key is present\n  if (process.env.ANTHROPIC_API_KEY) {\n    manager.registerProvider(\'claude-sonnet-v2\', {\n      provider: AIProvider.CLAUDE,\n      apiKey: process.env.ANTHROPIC_API_KEY,\n      model: AIModel.CLAUDE_35_SONNET_V2,\n      maxTokens: 8192,\n      temperature: 0.7\n    });\n\n    manager.registerProvider(\'claude-sonnet\', {\n      provider: AIProvider.CLAUDE,\n      apiKey: process.env.ANTHROPIC_API_KEY,\n      model: AIModel.CLAUDE_35_SONNET,\n      maxTokens: 8192,\n      temperature: 0.7\n    });\n\n    manager.registerProvider(\'claude-opus\', {\n      provider: AIProvider.CLAUDE,\n      apiKey: process.env.ANTHROPIC_API_KEY,\n      model: AIModel.CLAUDE_3_OPUS,\n      maxTokens: 4096,\n      temperature: 0.7\n    });\n\n    manager.registerProvider(\'claude-haiku\', {\n      provider: AIProvider.CLAUDE,\n      apiKey: process.env.ANTHROPIC_API_KEY,\n      model: AIModel.CLAUDE_3_HAIKU,\n      maxTokens: 4096,\n      temperature: 0.7\n    });\n  }\n\n  // Initialize Llama (local) if base URL is configured\n  if (process.env.LLAMA_BASE_URL || process.env.OPEN_WEBUI_URL) {\n    const baseURL = process.env.LLAMA_BASE_URL || process.env.OPEN_WEBUI_URL || \'http://localhost:3000/api\';\n    \n    manager.registerProvider(\'llama-90b\', {\n      provider: AIProvider.LLAMA,\n      apiKey: \'local\', // Not required for local models\n      model: AIModel.LLAMA_32_90B,\n      baseURL,\n      maxTokens: 4096,\n      temperature: 0.7\n    });\n\n    manager.registerProvider(\'llama-11b\', {\n      provider: AIProvider.LLAMA,\n      apiKey: \'local\',\n      model: AIModel.LLAMA_32_11B,\n      baseURL,\n      maxTokens: 4096,\n      temperature: 0.7\n    });\n\n    manager.registerProvider(\'llama-3b\', {\n      provider: AIProvider.LLAMA,\n      apiKey: \'local\',\n      model: AIModel.LLAMA_32_3B,\n      baseURL,\n      maxTokens: 4096,\n      temperature: 0.7\n    });\n\n    manager.registerProvider(\'llama-1b\', {\n      provider: AIProvider.LLAMA,\n      apiKey: \'local\',\n      model: AIModel.LLAMA_32_1B,\n      baseURL,\n      maxTokens: 4096,\n      temperature: 0.7\n    });\n  }\n\n  return manager;\n}</new_str>\n</str-replace>\n</function_calls>'}