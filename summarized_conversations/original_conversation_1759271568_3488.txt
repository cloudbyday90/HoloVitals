{'role': 'user', 'content': '<tool_result> <execute-command> ToolResult(success=True, output=\'{\\n  "output": "   export interface IAIProvider {\\\\n     // Provider info\\\\n     readonly provider: AIProvider;\\\\n     readonly model: AIModel;\\\\n     readonly capabilities: AIProviderCapabilities;\\\\n     readonly costs: AIProviderCosts;\\\\n   \\\\n     // Core methods\\\\n     complete(request: AICompletionRequest): Promise<AICompletionResponse>;\\\\n     stream(request: AICompletionRequest): AsyncGenerator<AIStreamChunk>;\\\\n     \\\\n     // Utility methods\\\\n     countTokens(text: string): number;\\\\n     calculateCost(promptTokens: number, completionTokens: number): number;\\\\n     validateApiKey(): Promise<boolean>;\\\\n     \\\\n     // Configuration\\\\n     updateConfig(config: Partial<AIProviderConfig>): void;\\\\n     getConfig(): AIProviderConfig;\\\\n   }\\\\n   \\\\n   /**\\\\n    * Model capabilities by provider\\\\n    */\\\\n   export const MODEL_CAPABILITIES: Record<AIModel, AIProviderCapabilities> = {\\\\n     // OpenAI Models\\\\n     [AIModel.GPT_35_TURBO]: {\\\\n       supportsStreaming: true,\\\\n       supportsVision: false,\\\\n       supportsFunctionCalling: true,\\\\n       supportsSystemMessages: true,\\\\n",\\n  "exit_code": 0,\\n  "cwd": "/workspace"\\n}\') </execute-command> </tool_result>'}