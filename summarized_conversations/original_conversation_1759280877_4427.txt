{'role': 'assistant', 'content': '<function_calls>\n<full-file-rewrite file_path="medical-analysis-platform/components/layout/Sidebar.tsx">\n\'use client\';\n\nimport Link from \'next/link\';\nimport { usePathname } from \'next/navigation\';\nimport { \n  Home, \n  FileText, \n  MessageSquare, \n  ListTodo, \n  Server, \n  DollarSign, \n  Settings,\n  ChevronLeft,\n  ChevronRight,\n  Zap,\n  Lock\n} from \'lucide-react\';\nimport { cn } from \'@/lib/utils\';\nimport { OwnerOnly, AdminOnly } from \'@/components/ui/RoleGuard\';\n\ninterface SidebarProps {\n  isOpen: boolean;\n  onToggle: () => void;\n}\n\nconst navigation = [\n  { name: \'Overview\', href: \'/dashboard\', icon: Home, public: true },\n  { name: \'Documents\', href: \'/dashboard/documents\', icon: FileText, public: true },\n  { name: \'AI Chat\', href: \'/dashboard/chat\', icon: MessageSquare, public: true },\n  { name: \'Queue\', href: \'/dashboard/queue\', icon: ListTodo, adminOnly: true },\n  { name: \'Instances\', href: \'/dashboard/instances\', icon: Server, adminOnly: true },\n  { name: \'Costs\', href: \'/dashboard/costs\', icon: DollarSign, ownerOnly: true },\n];\n\nexport function Sidebar({ isOpen, onToggle }: SidebarProps) {\n  const pathname = usePathname();\n\n  return (\n    <>\n      {/* Overlay for mobile */}\n      {isOpen && (\n        <div\n          className="fixed inset-0 bg-black/50 z-40 lg:hidden"\n          onClick={onToggle}\n        />\n      )}\n\n      {/* Sidebar */}\n      <aside\n        className={cn(\n          \'fixed top-0 left-0 z-50 h-screen bg-white border-r border-gray-200\',\n          \'transition-transform duration-300 ease-in-out\',\n          \'lg:translate-x-0\',\n          isOpen ? \'translate-x-0\' : \'-translate-x-full\',\n          \'w-64\'\n        )}\n      >\n        {/* Logo */}\n        <div className="flex items-center justify-between h-16 px-6 border-b border-gray-200">\n          <div className="flex items-center gap-2">\n            <div className="w-8 h-8 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center">\n              <Zap className="w-5 h-5 text-white" />\n            </div>\n            <span className="text-xl font-bold text-gray-900">HoloVitals</span>\n          </div>\n          <button\n            onClick={onToggle}\n            className="lg:hidden p-2 hover:bg-gray-100 rounded-lg transition-colors"\n          >\n            <ChevronLeft className="w-5 h-5" />\n          </button>\n        </div>\n\n        {/* Navigation */}\n        <nav className="flex-1 px-4 py-6 space-y-1 overflow-y-auto">\n          {navigation.map((item) => {\n            const isActive = pathname === item.href;\n            const Icon = item.icon;\n\n            // Render public items\n            if (item.public) {\n              return (\n                <Link\n                  key={item.name}\n                  href={item.href}\n                  className={cn(\n                    \'flex items-center gap-3 px-3 py-2 rounded-lg text-sm font-medium transition-colors\',\n                    isActive\n                      ? \'bg-blue-50 text-blue-600\'\n                      : \'text-gray-700 hover:bg-gray-50 hover:text-gray-900\'\n                  )}\n                >\n                  <Icon className="w-5 h-5" />\n                  <span>{item.name}</span>\n                </Link>\n              );\n            }\n\n            // Render owner-only items\n            if (item.ownerOnly) {\n              return (\n                <OwnerOnly key={item.name}>\n                  <Link\n                    href={item.href}\n                    className={cn(\n                      \'flex items-center gap-3 px-3 py-2 rounded-lg text-sm font-medium transition-colors\',\n                      isActive\n                        ? \'bg-blue-50 text-blue-600\'\n                        : \'text-gray-700 hover:bg-gray-50 hover:text-gray-900\'\n                    )}\n                  >\n                    <Icon className="w-5 h-5" />\n                    <span className="flex-1">{item.name}</span>\n                    <Lock className="w-3 h-3 text-gray-400" />\n                  </Link>\n                </OwnerOnly>\n              );\n            }\n\n            // Render admin-only items\n            if (item.adminOnly) {\n              return (\n                <AdminOnly key={item.name}>\n                  <Link\n                    href={item.href}\n                    className={cn(\n                      \'flex items-center gap-3 px-3 py-2 rounded-lg text-sm font-medium transition-colors\',\n                      isActive\n                        ? \'bg-blue-50 text-blue-600\'\n                        : \'text-gray-700 hover:bg-gray-50 hover:text-gray-900\'\n                    )}\n                  >\n                    <Icon className="w-5 h-5" />\n                    <span className="flex-1">{item.name}</span>\n                    <Lock className="w-3 h-3 text-gray-400" />\n                  </Link>\n                </AdminOnly>\n              );\n            }\n\n            return null;\n          })}\n        </nav>\n\n        {/* Settings (bottom) */}\n        <div className="border-t border-gray-200 p-4">\n          <Link\n            href="/dashboard/settings"\n            className="flex items-center gap-3 px-3 py-2 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 hover:text-gray-900 transition-colors"\n          >\n            <Settings className="w-5 h-5" />\n            <span>Settings</span>\n          </Link>\n        </div>\n      </aside>\n    </>\n  );\n}\n</full-file-rewrite>\n</function_calls>'}