{'role': 'assistant', 'content': '<function_calls>\n<str-replace file_path="medical-analysis-platform/components/layout/Sidebar.tsx">\n<old_str>import Link from \'next/link\';\nimport { usePathname } from \'next/navigation\';\nimport {\n  LayoutDashboard,\n  FileText,\n  MessageSquare,\n  ListTodo,\n  Server,\n  DollarSign,\n  ChevronLeft,\n  ChevronRight,\n} from \'lucide-react\';\n\ninterface SidebarProps {\n  isCollapsed: boolean;\n  onToggle: () => void;\n}\n\nconst menuItems = [\n  { icon: LayoutDashboard, label: \'Overview\', href: \'/dashboard\' },\n  { icon: FileText, label: \'Documents\', href: \'/dashboard/documents\' },\n  { icon: MessageSquare, label: \'Chat\', href: \'/dashboard/chat\' },\n  { icon: ListTodo, label: \'Queue\', href: \'/dashboard/queue\' },\n  { icon: Server, label: \'Instances\', href: \'/dashboard/instances\' },\n  { icon: DollarSign, label: \'Costs\', href: \'/dashboard/costs\' },\n];\n\nexport function Sidebar({ isCollapsed, onToggle }: SidebarProps) {\n  const pathname = usePathname();\n\n  return (\n    <aside\n      className={`\n        fixed left-0 top-0 h-screen bg-white border-r border-gray-200\n        transition-all duration-300 ease-in-out z-40\n        ${isCollapsed ? \'w-16\' : \'w-64\'}\n      `}\n    >\n      {/* Header */}\n      <div className="h-16 flex items-center justify-between px-4 border-b border-gray-200">\n        {!isCollapsed && (\n          <h1 className="text-xl font-bold text-blue-600">HoloVitals</h1>\n        )}\n        <button\n          onClick={onToggle}\n          className="p-2 hover:bg-gray-100 rounded-lg transition-colors"\n          aria-label={isCollapsed ? \'Expand sidebar\' : \'Collapse sidebar\'}\n        >\n          {isCollapsed ? (\n            <ChevronRight className="w-5 h-5 text-gray-600" />\n          ) : (\n            <ChevronLeft className="w-5 h-5 text-gray-600" />\n          )}\n        </button>\n      </div>\n\n      {/* Navigation */}\n      <nav className="p-4 space-y-2">\n        {menuItems.map((item) => {\n          const Icon = item.icon;\n          const isActive = pathname === item.href;\n\n          return (\n            <Link\n              key={item.href}\n              href={item.href}\n              className={`\n                flex items-center gap-3 px-3 py-2 rounded-lg\n                transition-colors duration-200\n                ${\n                  isActive\n                    ? \'bg-blue-50 text-blue-600\'\n                    : \'text-gray-700 hover:bg-gray-100\'\n                }\n                ${isCollapsed ? \'justify-center\' : \'\'}\n              `}\n              title={isCollapsed ? item.label : undefined}\n            >\n              <Icon className="w-5 h-5 flex-shrink-0" />\n              {!isCollapsed && (\n                <span className="font-medium">{item.label}</span>\n              )}\n            </Link>\n          );\n        })}\n      </nav>\n    </aside>\n  );\n}</old_str>\n<new_str>import Link from \'next/link\';\nimport { usePathname } from \'next/navigation\';\nimport {\n  LayoutDashboard,\n  FileText,\n  MessageSquare,\n  ListTodo,\n  Server,\n  DollarSign,\n  ChevronLeft,\n  ChevronRight,\n  Lock,\n} from \'lucide-react\';\nimport { OwnerOnly, AdminOnly } from \'@/components/ui/RoleGuard\';\n\ninterface SidebarProps {\n  isCollapsed: boolean;\n  onToggle: () => void;\n}\n\nconst menuItems = [\n  { icon: LayoutDashboard, label: \'Overview\', href: \'/dashboard\', public: true },\n  { icon: FileText, label: \'Documents\', href: \'/dashboard/documents\', public: true },\n  { icon: MessageSquare, label: \'Chat\', href: \'/dashboard/chat\', public: true },\n  { icon: ListTodo, label: \'Queue\', href: \'/dashboard/queue\', adminOnly: true },\n  { icon: Server, label: \'Instances\', href: \'/dashboard/instances\', adminOnly: true },\n  { icon: DollarSign, label: \'Costs\', href: \'/dashboard/costs\', ownerOnly: true },\n];\n\nexport function Sidebar({ isCollapsed, onToggle }: SidebarProps) {\n  const pathname = usePathname();\n\n  return (\n    <aside\n      className={`\n        fixed left-0 top-0 h-screen bg-white border-r border-gray-200\n        transition-all duration-300 ease-in-out z-40\n        ${isCollapsed ? \'w-16\' : \'w-64\'}\n      `}\n    >\n      {/* Header */}\n      <div className="h-16 flex items-center justify-between px-4 border-b border-gray-200">\n        {!isCollapsed && (\n          <h1 className="text-xl font-bold text-blue-600">HoloVitals</h1>\n        )}\n        <button\n          onClick={onToggle}\n          className="p-2 hover:bg-gray-100 rounded-lg transition-colors"\n          aria-label={isCollapsed ? \'Expand sidebar\' : \'Collapse sidebar\'}\n        >\n          {isCollapsed ? (\n            <ChevronRight className="w-5 h-5 text-gray-600" />\n          ) : (\n            <ChevronLeft className="w-5 h-5 text-gray-600" />\n          )}\n        </button>\n      </div>\n\n      {/* Navigation */}\n      <nav className="p-4 space-y-2">\n        {menuItems.map((item) => {\n          const Icon = item.icon;\n          const isActive = pathname === item.href;\n\n          // Render public items\n          if (item.public) {\n            return (\n              <Link\n                key={item.href}\n                href={item.href}\n                className={`\n                  flex items-center gap-3 px-3 py-2 rounded-lg\n                  transition-colors duration-200\n                  ${\n                    isActive\n                      ? \'bg-blue-50 text-blue-600\'\n                      : \'text-gray-700 hover:bg-gray-100\'\n                  }\n                  ${isCollapsed ? \'justify-center\' : \'\'}\n                `}\n                title={isCollapsed ? item.label : undefined}\n              >\n                <Icon className="w-5 h-5 flex-shrink-0" />\n                {!isCollapsed && (\n                  <span className="font-medium">{item.label}</span>\n                )}\n              </Link>\n            );\n          }\n\n          // Render owner-only items\n          if (item.ownerOnly) {\n            return (\n              <OwnerOnly key={item.href}>\n                <Link\n                  href={item.href}\n                  className={`\n                    flex items-center gap-3 px-3 py-2 rounded-lg\n                    transition-colors duration-200\n                    ${\n                      isActive\n                        ? \'bg-blue-50 text-blue-600\'\n                        : \'text-gray-700 hover:bg-gray-100\'\n                    }\n                    ${isCollapsed ? \'justify-center\' : \'\'}\n                  `}\n                  title={isCollapsed ? item.label : undefined}\n                >\n                  <Icon className="w-5 h-5 flex-shrink-0" />\n                  {!isCollapsed && (\n                    <>\n                      <span className="font-medium flex-1">{item.label}</span>\n                      <Lock className="w-3 h-3 text-gray-400" />\n                    </>\n                  )}\n                </Link>\n              </OwnerOnly>\n            );\n          }\n\n          // Render admin-only items\n          if (item.adminOnly) {\n            return (\n              <AdminOnly key={item.href}>\n                <Link\n                  href={item.href}\n                  className={`\n                    flex items-center gap-3 px-3 py-2 rounded-lg\n                    transition-colors duration-200\n                    ${\n                      isActive\n                        ? \'bg-blue-50 text-blue-600\'\n                        : \'text-gray-700 hover:bg-gray-100\'\n                    }\n                    ${isCollapsed ? \'justify-center\' : \'\'}\n                  `}\n                  title={isCollapsed ? item.label : undefined}\n                >\n                  <Icon className="w-5 h-5 flex-shrink-0" />\n                  {!isCollapsed && (\n                    <>\n                      <span className="font-medium flex-1">{item.label}</span>\n                      <Lock className="w-3 h-3 text-gray-400" />\n                    </>\n                  )}\n                </Link>\n              </AdminOnly>\n            );\n          }\n\n          return null;\n        })}\n      </nav>\n    </aside>\n  );\n}</new_str>\n</str-replace>\n</function_calls>'}