{'role': 'user', 'content': '<tool_result> <str-replace> ToolResult(success=False, output=\'String \\\'import Link from \\\'next/link\\\';\\nimport { usePathname } from \\\'next/navigation\\\';\\nimport {\\n  LayoutDashboard,\\n  FileText,\\n  MessageSquare,\\n  ListTodo,\\n  Server,\\n  DollarSign,\\n  ChevronLeft,\\n  ChevronRight,\\n} from \\\'lucide-react\\\';\\n\\ninterface SidebarProps {\\n  isCollapsed: boolean;\\n  onToggle: () => void;\\n}\\n\\nconst menuItems = [\\n  { icon: LayoutDashboard, label: \\\'Overview\\\', href: \\\'/dashboard\\\' },\\n  { icon: FileText, label: \\\'Documents\\\', href: \\\'/dashboard/documents\\\' },\\n  { icon: MessageSquare, label: \\\'Chat\\\', href: \\\'/dashboard/chat\\\' },\\n  { icon: ListTodo, label: \\\'Queue\\\', href: \\\'/dashboard/queue\\\' },\\n  { icon: Server, label: \\\'Instances\\\', href: \\\'/dashboard/instances\\\' },\\n  { icon: DollarSign, label: \\\'Costs\\\', href: \\\'/dashboard/costs\\\' },\\n];\\n\\nexport function Sidebar({ isCollapsed, onToggle }: SidebarProps) {\\n  const pathname = usePathname();\\n\\n  return (\\n    <aside\\n      className={`\\n        fixed left-0 top-0 h-screen bg-white border-r border-gray-200\\n        transition-all duration-300 ease-in-out z-40\\n        ${isCollapsed ? \\\'w-16\\\' : \\\'w-64\\\'}\\n      `}\\n    >\\n      {/* Header */}\\n      <div className="h-16 flex items-center justify-between px-4 border-b border-gray-200">\\n        {!isCollapsed && (\\n          <h1 className="text-xl font-bold text-blue-600">HoloVitals</h1>\\n        )}\\n        <button\\n          onClick={onToggle}\\n          className="p-2 hover:bg-gray-100 rounded-lg transition-colors"\\n          aria-label={isCollapsed ? \\\'Expand sidebar\\\' : \\\'Collapse sidebar\\\'}\\n        >\\n          {isCollapsed ? (\\n            <ChevronRight className="w-5 h-5 text-gray-600" />\\n          ) : (\\n            <ChevronLeft className="w-5 h-5 text-gray-600" />\\n          )}\\n        </button>\\n      </div>\\n\\n      {/* Navigation */}\\n      <nav className="p-4 space-y-2">\\n        {menuItems.map((item) => {\\n          const Icon = item.icon;\\n          const isActive = pathname === item.href;\\n\\n          return (\\n            <Link\\n              key={item.href}\\n              href={item.href}\\n              className={`\\n                flex items-center gap-3 px-3 py-2 rounded-lg\\n                transition-colors duration-200\\n                ${\\n                  isActive\\n                    ? \\\'bg-blue-50 text-blue-600\\\'\\n                    : \\\'text-gray-700 hover:bg-gray-100\\\'\\n                }\\n                ${isCollapsed ? \\\'justify-center\\\' : \\\'\\\'}\\n              `}\\n              title={isCollapsed ? item.label : undefined}\\n            >\\n              <Icon className="w-5 h-5 flex-shrink-0" />\\n              {!isCollapsed && (\\n                <span className="font-medium">{item.label}</span>\\n              )}\\n            </Link>\\n          );\\n        })}\\n      </nav>\\n    </aside>\\n  );\\n}\\\' not found in file\') </str-replace> </tool_result>'}