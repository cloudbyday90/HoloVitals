{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="medical-analysis-platform/app/api/tokens/purchase/route.ts">\n/**\n * Token Purchase API\n * \n * POST /api/tokens/purchase - Purchase additional tokens\n */\n\nimport { NextRequest, NextResponse } from \'next/server\';\nimport { TokenService } from \'@/lib/services/TokenService\';\nimport { TOKEN_PACKAGES } from \'@/lib/config/pricing\';\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    const { userId, packageIndex, paymentIntentId } = body;\n    \n    if (!userId || packageIndex === undefined || !paymentIntentId) {\n      return NextResponse.json(\n        { error: \'Missing required fields: userId, packageIndex, paymentIntentId\' },\n        { status: 400 }\n      );\n    }\n    \n    // Validate package index\n    if (packageIndex < 0 || packageIndex >= TOKEN_PACKAGES.length) {\n      return NextResponse.json(\n        { error: \'Invalid package index\' },\n        { status: 400 }\n      );\n    }\n    \n    const tokenPackage = TOKEN_PACKAGES[packageIndex];\n    \n    // In production, verify payment with payment provider here\n    // For now, we\'ll assume payment is successful\n    \n    const balance = await TokenService.purchaseTokens({\n      userId,\n      packageIndex,\n      paymentIntentId,\n    });\n    \n    return NextResponse.json({\n      success: true,\n      balance,\n      package: tokenPackage,\n      message: `Successfully purchased ${tokenPackage.displayName}`,\n    });\n  } catch (error: any) {\n    console.error(\'Token purchase error:\', error);\n    return NextResponse.json(\n      { error: error.message || \'Failed to purchase tokens\' },\n      { status: 500 }\n    );\n  }\n}\n</create-file>\n</function_calls>'}