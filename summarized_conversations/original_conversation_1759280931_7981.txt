{'role': 'assistant', 'content': '<function_calls>\n<str-replace file_path="medical-analysis-platform/prisma/schema.prisma">\n<old_str>model AccessLog {\n  id           String   @id @default(uuid())\n  userId       String\n  action       String\n  resourceType String\n  resourceId   String?\n  allowed      Boolean\n  reason       String?\n  ipAddress    String?\n  userAgent    String?\n  timestamp    DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([timestamp])\n  @@index([allowed])\n  @@index([resourceType])\n  @@map("access_logs")\n}\n</old_str>\n<new_str>model AccessLog {\n  id           String   @id @default(uuid())\n  userId       String\n  action       String\n  resourceType String\n  resourceId   String?\n  allowed      Boolean\n  reason       String?\n  ipAddress    String?\n  userAgent    String?\n  timestamp    DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([timestamp])\n  @@index([allowed])\n  @@index([resourceType])\n  @@map("access_logs")\n}\n\n// ============================================================================\n// ERROR HANDLING & LOGGING\n// ============================================================================\n\nmodel ErrorLog {\n  id          String   @id @default(uuid())\n  severity    String   // LOW, MEDIUM, HIGH, CRITICAL\n  message     String   @db.Text\n  code        String?\n  statusCode  Int?\n  stack       String?  @db.Text\n  details     String?  @db.Text // JSON string\n  userId      String?\n  requestId   String?\n  endpoint    String?\n  method      String?\n  userAgent   String?\n  ipAddress   String?\n  timestamp   DateTime @default(now())\n\n  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)\n\n  @@index([userId])\n  @@index([timestamp])\n  @@index([severity])\n  @@index([code])\n  @@index([endpoint])\n  @@map("error_logs")\n}\n\nmodel Notification {\n  id        String   @id @default(uuid())\n  type      String   // CRITICAL_ERROR, INFO, WARNING, etc.\n  title     String\n  message   String   @db.Text\n  severity  String   // LOW, MEDIUM, HIGH, CRITICAL\n  metadata  String?  @db.Text // JSON string\n  read      Boolean  @default(false)\n  userId    String?\n  createdAt DateTime @default(now())\n\n  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([createdAt])\n  @@index([read])\n  @@map("notifications")\n}\n</new_str>\n</str-replace>\n</function_calls>'}