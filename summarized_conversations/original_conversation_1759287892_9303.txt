{'role': 'assistant', 'content': '# Adding More EHR Providers - Phase 4 Implementation\n\nGreat! Let\'s implement support for additional EHR providers. I\'ll create connectors for Cerner/Oracle Health, Allscripts, athenahealth, eClinicalWorks, and NextGen.\n\nLet me start by creating a provider registry with configurations for all major EHR systems:\n\n<function_calls>\n<create-file file_path="medical-analysis-platform/lib/config/ehr-providers.ts">\n/**\n * EHR Provider Configurations\n * \n * Registry of supported EHR providers with their FHIR endpoints and OAuth configurations\n */\n\nexport enum EHRProvider {\n  EPIC = \'EPIC\',\n  CERNER = \'CERNER\',\n  ALLSCRIPTS = \'ALLSCRIPTS\',\n  ATHENAHEALTH = \'ATHENAHEALTH\',\n  ECLINICALWORKS = \'ECLINICALWORKS\',\n  NEXTGEN = \'NEXTGEN\',\n  MEDITECH = \'MEDITECH\',\n  PRACTICE_FUSION = \'PRACTICE_FUSION\',\n  GREENWAY = \'GREENWAY\',\n  OTHER = \'OTHER\',\n}\n\nexport interface ProviderEndpoints {\n  fhirBaseUrl: string;\n  authorizationUrl: string;\n  tokenUrl: string;\n  registrationUrl?: string;\n  documentationUrl?: string;\n}\n\nexport interface ProviderCapabilities {\n  supportsDocumentReference: boolean;\n  supportsObservation: boolean;\n  supportsCondition: boolean;\n  supportsMedication: boolean;\n  supportsAllergy: boolean;\n  supportsImmunization: boolean;\n  supportsProcedure: boolean;\n  supportsBulkData: boolean;\n  supportsSmartLaunch: boolean;\n}\n\nexport interface ProviderConfig {\n  id: EHRProvider;\n  name: string;\n  displayName: string;\n  description: string;\n  logo?: string;\n  color: string;\n  \n  // Endpoints\n  production: ProviderEndpoints;\n  sandbox?: ProviderEndpoints;\n  \n  // OAuth Configuration\n  requiresClientSecret: boolean;\n  defaultScopes: string[];\n  \n  // Capabilities\n  capabilities: ProviderCapabilities;\n  \n  // Rate Limiting\n  rateLimit?: {\n    requestsPerMinute: number;\n    requestsPerHour: number;\n  };\n  \n  // Additional Info\n  marketShare?: number; // Percentage\n  patientPortalName?: string;\n  setupInstructions?: string;\n}\n\n/**\n * Epic Configuration\n */\nexport const EPIC_CONFIG: ProviderConfig = {\n  id: EHRProvider.EPIC,\n  name: \'epic\',\n  displayName: \'Epic\',\n  description: \'Epic Systems - Leading EHR provider serving major health systems\',\n  color: \'#0071CE\',\n  patientPortalName: \'MyChart\',\n  marketShare: 31,\n  \n  production: {\n    fhirBaseUrl: \'https://fhir.epic.com/interconnect-fhir-oauth/api/FHIR/R4\',\n    authorizationUrl: \'https://fhir.epic.com/interconnect-fhir-oauth/oauth2/authorize\',\n    tokenUrl: \'https://fhir.epic.com/interconnect-fhir-oauth/oauth2/token\',\n    registrationUrl: \'https://fhir.epic.com/Developer/Apps\',\n    documentationUrl: \'https://fhir.epic.com/\',\n  },\n  \n  sandbox: {\n    fhirBaseUrl: \'https://fhir.epic.com/interconnect-fhir-oauth/api/FHIR/R4\',\n    authorizationUrl: \'https://fhir.epic.com/interconnect-fhir-oauth/oauth2/authorize\',\n    tokenUrl: \'https://fhir.epic.com/interconnect-fhir-oauth/oauth2/token\',\n    documentationUrl: \'https://fhir.epic.com/\',\n  },\n  \n  requiresClientSecret: false,\n  defaultScopes: [\n    \'openid\',\n    \'profile\',\n    \'launch/patient\',\n    \'offline_access\',\n    \'patient/Patient.read\',\n    \'patient/DocumentReference.read\',\n    \'patient/Observation.read\',\n    \'patient/Condition.read\',\n    \'patient/MedicationRequest.read\',\n    \'patient/AllergyIntolerance.read\',\n    \'patient/Immunization.read\',\n    \'patient/Procedure.read\',\n  ],\n  \n  capabilities: {\n    supportsDocumentReference: true,\n    supportsObservation: true,\n    supportsCondition: true,\n    supportsMedication: true,\n    supportsAllergy: true,\n    supportsImmunization: true,\n    supportsProcedure: true,\n    supportsBulkData: true,\n    supportsSmartLaunch: true,\n  },\n  \n  rateLimit: {\n    requestsPerMinute: 60,\n    requestsPerHour: 1000,\n  },\n  \n  setupInstructions: \'Register your app at https://fhir.epic.com/Developer/Apps\',\n};\n\n/**\n * Cerner/Oracle Health Configuration\n */\nexport const CERNER_CONFIG: ProviderConfig = {\n  id: EHRProvider.CERNER,\n  name: \'cerner\',\n  displayName: \'Cerner (Oracle Health)\',\n  description: \'Oracle Health (formerly Cerner) - Major EHR provider\',\n  color: \'#FF6600\',\n  patientPortalName: \'HealtheLife\',\n  marketShare: 25,\n  \n  production: {\n    fhirBaseUrl: \'https://fhir-myrecord.cerner.com/r4/{tenant_id}\',\n    authorizationUrl: \'https://authorization.cerner.com/tenants/{tenant_id}/protocols/oauth2/profiles/smart-v1/personas/patient/authorize\',\n    tokenUrl: \'https://authorization.cerner.com/tenants/{tenant_id}/protocols/oauth2/profiles/smart-v1/token\',\n    registrationUrl: \'https://code-console.cerner.com/\',\n    documentationUrl: \'https://fhir.cerner.com/\',\n  },\n  \n  sandbox: {\n    fhirBaseUrl: \'https://fhir-ehr-code.cerner.com/r4/ec2458f2-1e24-41c8-b71b-0e701af7583d\',\n    authorizationUrl: \'https://authorization.cerner.com/tenants/ec2458f2-1e24-41c8-b71b-0e701af7583d/protocols/oauth2/profiles/smart-v1/personas/patient/authorize\',\n    tokenUrl: \'https://authorization.cerner.com/tenants/ec2458f2-1e24-41c8-b71b-0e701af7583d/protocols/oauth2/profiles/smart-v1/token\',\n    documentationUrl: \'https://fhir.cerner.com/millennium/r4/\',\n  },\n  \n  requiresClientSecret: false,\n  defaultScopes: [\n    \'openid\',\n    \'profile\',\n    \'launch/patient\',\n    \'offline_access\',\n    \'patient/Patient.read\',\n    \'patient/DocumentReference.read\',\n    \'patient/Observation.read\',\n    \'patient/Condition.read\',\n    \'patient/MedicationRequest.read\',\n    \'patient/AllergyIntolerance.read\',\n    \'patient/Immunization.read\',\n    \'patient/Procedure.read\',\n  ],\n  \n  capabilities: {\n    supportsDocumentReference: true,\n    supportsObservation: true,\n    supportsCondition: true,\n    supportsMedication: true,\n    supportsAllergy: true,\n    supportsImmunization: true,\n    supportsProcedure: true,\n    supportsBulkData: true,\n    supportsSmartLaunch: true,\n  },\n  \n  rateLimit: {\n    requestsPerMinute: 60,\n    requestsPerHour: 1000,\n  },\n  \n  setupInstructions: \'Register your app at https://code-console.cerner.com/\',\n};\n\n/**\n * Allscripts Configuration\n */\nexport const ALLSCRIPTS_CONFIG: ProviderConfig = {\n  id: EHRProvider.ALLSCRIPTS,\n  name: \'allscripts\',\n  displayName: \'Allscripts\',\n  description: \'Allscripts - Healthcare IT solutions provider\',\n  color: \'#00A3E0\',\n  patientPortalName: \'FollowMyHealth\',\n  marketShare: 8,\n  \n  production: {\n    fhirBaseUrl: \'https://fhir.allscripts.com/fhir/r4\',\n    authorizationUrl: \'https://oauth.allscripts.com/oauth/authorize\',\n    tokenUrl: \'https://oauth.allscripts.com/oauth/token\',\n    registrationUrl: \'https://developer.allscripts.com/\',\n    documentationUrl: \'https://developer.allscripts.com/FHIR\',\n  },\n  \n  sandbox: {\n    fhirBaseUrl: \'https://fhir-sandbox.allscripts.com/fhir/r4\',\n    authorizationUrl: \'https://oauth-sandbox.allscripts.com/oauth/authorize\',\n    tokenUrl: \'https://oauth-sandbox.allscripts.com/oauth/token\',\n    documentationUrl: \'https://developer.allscripts.com/FHIR\',\n  },\n  \n  requiresClientSecret: true,\n  defaultScopes: [\n    \'openid\',\n    \'profile\',\n    \'launch/patient\',\n    \'offline_access\',\n    \'patient/Patient.read\',\n    \'patient/DocumentReference.read\',\n    \'patient/Observation.read\',\n    \'patient/Condition.read\',\n    \'patient/MedicationRequest.read\',\n    \'patient/AllergyIntolerance.read\',\n    \'patient/Immunization.read\',\n    \'patient/Procedure.read\',\n  ],\n  \n  capabilities: {\n    supportsDocumentReference: true,\n    supportsObservation: true,\n    supportsCondition: true,\n    supportsMedication: true,\n    supportsAllergy: true,\n    supportsImmunization: true,\n    supportsProcedure: true,\n    supportsBulkData: false,\n    supportsSmartLaunch: true,\n  },\n  \n  rateLimit: {\n    requestsPerMinute: 30,\n    requestsPerHour: 500,\n  },\n  \n  setupInstructions: \'Register your app at https://developer.allscripts.com/\',\n};\n\n/**\n * athenahealth Configuration\n */\nexport const ATHENAHEALTH_CONFIG: ProviderConfig = {\n  id: EHRProvider.ATHENAHEALTH,\n  name: \'athenahealth\',\n  displayName: \'athenahealth\',\n  description: \'athenahealth - Cloud-based EHR and practice management\',\n  color: \'#FF6B35\',\n  patientPortalName: \'athenaPatient\',\n  marketShare: 6,\n  \n  production: {\n    fhirBaseUrl: \'https://api.platform.athenahealth.com/fhir/r4\',\n    authorizationUrl: \'https://api.platform.athenahealth.com/oauth2/v1/authorize\',\n    tokenUrl: \'https://api.platform.athenahealth.com/oauth2/v1/token\',\n    registrationUrl: \'https://developer.athenahealth.com/\',\n    documentationUrl: \'https://docs.athenahealth.com/api/fhir-r4\',\n  },\n  \n  sandbox: {\n    fhirBaseUrl: \'https://api.preview.platform.athenahealth.com/fhir/r4\',\n    authorizationUrl: \'https://api.preview.platform.athenahealth.com/oauth2/v1/authorize\',\n    tokenUrl: \'https://api.preview.platform.athenahealth.com/oauth2/v1/token\',\n    documentationUrl: \'https://docs.athenahealth.com/api/fhir-r4\',\n  },\n  \n  requiresClientSecret: true,\n  defaultScopes: [\n    \'openid\',\n    \'profile\',\n    \'launch/patient\',\n    \'offline_access\',\n    \'patient/Patient.read\',\n    \'patient/DocumentReference.read\',\n    \'patient/Observation.read\',\n    \'patient/Condition.read\',\n    \'patient/MedicationRequest.read\',\n    \'patient/AllergyIntolerance.read\',\n    \'patient/Immunization.read\',\n    \'patient/Procedure.read\',\n  ],\n  \n  capabilities: {\n    supportsDocumentReference: true,\n    supportsObservation: true,\n    supportsCondition: true,\n    supportsMedication: true,\n    supportsAllergy: true,\n    supportsImmunization: true,\n    supportsProcedure: true,\n    supportsBulkData: false,\n    supportsSmartLaunch: true,\n  },\n  \n  rateLimit: {\n    requestsPerMinute: 40,\n    requestsPerHour: 800,\n  },\n  \n  setupInstructions: \'Register your app at https://developer.athenahealth.com/\',\n};\n\n/**\n * eClinicalWorks Configuration\n */\nexport const ECLINICALWORKS_CONFIG: ProviderConfig = {\n  id: EHRProvider.ECLINICALWORKS,\n  name: \'eclinicalworks\',\n  displayName: \'eClinicalWorks\',\n  description: \'eClinicalWorks - Ambulatory EHR and practice management\',\n  color: \'#0066CC\',\n  patientPortalName: \'Patient Portal V11\',\n  marketShare: 5,\n  \n  production: {\n    fhirBaseUrl: \'https://fhir.eclinicalworks.com/fhir/r4\',\n    authorizationUrl: \'https://oauth.eclinicalworks.com/oauth/authorize\',\n    tokenUrl: \'https://oauth.eclinicalworks.com/oauth/token\',\n    registrationUrl: \'https://developer.eclinicalworks.com/\',\n    documentationUrl: \'https://developer.eclinicalworks.com/fhir\',\n  },\n  \n  sandbox: {\n    fhirBaseUrl: \'https://fhir-sandbox.eclinicalworks.com/fhir/r4\',\n    authorizationUrl: \'https://oauth-sandbox.eclinicalworks.com/oauth/authorize\',\n    tokenUrl: \'https://oauth-sandbox.eclinicalworks.com/oauth/token\',\n    documentationUrl: \'https://developer.eclinicalworks.com/fhir\',\n  },\n  \n  requiresClientSecret: true,\n  defaultScopes: [\n    \'openid\',\n    \'profile\',\n    \'launch/patient\',\n    \'offline_access\',\n    \'patient/Patient.read\',\n    \'patient/DocumentReference.read\',\n    \'patient/Observation.read\',\n    \'patient/Condition.read\',\n    \'patient/MedicationRequest.read\',\n    \'patient/AllergyIntolerance.read\',\n    \'patient/Immunization.read\',\n    \'patient/Procedure.read\',\n  ],\n  \n  capabilities: {\n    supportsDocumentReference: true,\n    supportsObservation: true,\n    supportsCondition: true,\n    supportsMedication: true,\n    supportsAllergy: true,\n    supportsImmunization: true,\n    supportsProcedure: true,\n    supportsBulkData: false,\n    supportsSmartLaunch: true,\n  },\n  \n  rateLimit: {\n    requestsPerMinute: 30,\n    requestsPerHour: 600,\n  },\n  \n  setupInstructions: \'Contact eClinicalWorks for API access\',\n};\n\n/**\n * NextGen Configuration\n */\nexport const NEXTGEN_CONFIG: ProviderConfig = {\n  id: EHRProvider.NEXTGEN,\n  name: \'nextgen\',\n  displayName: \'NextGen Healthcare\',\n  description: \'NextGen Healthcare - Ambulatory EHR solutions\',\n  color: \'#00A651\',\n  patientPortalName: \'NextGen Patient Portal\',\n  marketShare: 4,\n  \n  production: {\n    fhirBaseUrl: \'https://fhir.nextgen.com/nge/prod/fhir/r4\',\n    authorizationUrl: \'https://fhir.nextgen.com/nge/prod/oauth/authorize\',\n    tokenUrl: \'https://fhir.nextgen.com/nge/prod/oauth/token\',\n    registrationUrl: \'https://developer.nextgen.com/\',\n    documentationUrl: \'https://developer.nextgen.com/fhir\',\n  },\n  \n  sandbox: {\n    fhirBaseUrl: \'https://fhir.nextgen.com/nge/sandbox/fhir/r4\',\n    authorizationUrl: \'https://fhir.nextgen.com/nge/sandbox/oauth/authorize\',\n    tokenUrl: \'https://fhir.nextgen.com/nge/sandbox/oauth/token\',\n    documentationUrl: \'https://developer.nextgen.com/fhir\',\n  },\n  \n  requiresClientSecret: true,\n  defaultScopes: [\n    \'openid\',\n    \'profile\',\n    \'launch/patient\',\n    \'offline_access\',\n    \'patient/Patient.read\',\n    \'patient/DocumentReference.read\',\n    \'patient/Observation.read\',\n    \'patient/Condition.read\',\n    \'patient/MedicationRequest.read\',\n    \'patient/AllergyIntolerance.read\',\n    \'patient/Immunization.read\',\n    \'patient/Procedure.read\',\n  ],\n  \n  capabilities: {\n    supportsDocumentReference: true,\n    supportsObservation: true,\n    supportsCondition: true,\n    supportsMedication: true,\n    supportsAllergy: true,\n    supportsImmunization: true,\n    supportsProcedure: true,\n    supportsBulkData: false,\n    supportsSmartLaunch: true,\n  },\n  \n  rateLimit: {\n    requestsPerMinute: 30,\n    requestsPerHour: 500,\n  },\n  \n  setupInstructions: \'Register your app at https://developer.nextgen.com/\',\n};\n\n/**\n * Provider Registry\n */\nexport const PROVIDER_REGISTRY: Record<EHRProvider, ProviderConfig> = {\n  [EHRProvider.EPIC]: EPIC_CONFIG,\n  [EHRProvider.CERNER]: CERNER_CONFIG,\n  [EHRProvider.ALLSCRIPTS]: ALLSCRIPTS_CONFIG,\n  [EHRProvider.ATHENAHEALTH]: ATHENAHEALTH_CONFIG,\n  [EHRProvider.ECLINICALWORKS]: ECLINICALWORKS_CONFIG,\n  [EHRProvider.NEXTGEN]: NEXTGEN_CONFIG,\n  [EHRProvider.MEDITECH]: {\n    id: EHRProvider.MEDITECH,\n    name: \'meditech\',\n    displayName: \'MEDITECH\',\n    description: \'MEDITECH - Healthcare IT solutions\',\n    color: \'#003DA5\',\n    production: {\n      fhirBaseUrl: \'\',\n      authorizationUrl: \'\',\n      tokenUrl: \'\',\n    },\n    requiresClientSecret: true,\n    defaultScopes: [],\n    capabilities: {\n      supportsDocumentReference: true,\n      supportsObservation: true,\n      supportsCondition: true,\n      supportsMedication: true,\n      supportsAllergy: true,\n      supportsImmunization: true,\n      supportsProcedure: true,\n      supportsBulkData: false,\n      supportsSmartLaunch: true,\n    },\n  },\n  [EHRProvider.PRACTICE_FUSION]: {\n    id: EHRProvider.PRACTICE_FUSION,\n    name: \'practice_fusion\',\n    displayName: \'Practice Fusion\',\n    description: \'Practice Fusion - Cloud-based EHR\',\n    color: \'#00B4A0\',\n    production: {\n      fhirBaseUrl: \'\',\n      authorizationUrl: \'\',\n      tokenUrl: \'\',\n    },\n    requiresClientSecret: true,\n    defaultScopes: [],\n    capabilities: {\n      supportsDocumentReference: true,\n      supportsObservation: true,\n      supportsCondition: true,\n      supportsMedication: true,\n      supportsAllergy: true,\n      supportsImmunization: true,\n      supportsProcedure: true,\n      supportsBulkData: false,\n      supportsSmartLaunch: true,\n    },\n  },\n  [EHRProvider.GREENWAY]: {\n    id: EHRProvider.GREENWAY,\n    name: \'greenway\',\n    displayName: \'Greenway Health\',\n    description: \'Greenway Health - Ambulatory EHR\',\n    color: \'#6CC24A\',\n    production: {\n      fhirBaseUrl: \'\',\n      authorizationUrl: \'\',\n      tokenUrl: \'\',\n    },\n    requiresClientSecret: true,\n    defaultScopes: [],\n    capabilities: {\n      supportsDocumentReference: true,\n      supportsObservation: true,\n      supportsCondition: true,\n      supportsMedication: true,\n      supportsAllergy: true,\n      supportsImmunization: true,\n      supportsProcedure: true,\n      supportsBulkData: false,\n      supportsSmartLaunch: true,\n    },\n  },\n  [EHRProvider.OTHER]: {\n    id: EHRProvider.OTHER,\n    name: \'other\',\n    displayName: \'Other Provider\',\n    description: \'Custom FHIR-compliant provider\',\n    color: \'#666666\',\n    production: {\n      fhirBaseUrl: \'\',\n      authorizationUrl: \'\',\n      tokenUrl: \'\',\n    },\n    requiresClientSecret: false,\n    defaultScopes: [],\n    capabilities: {\n      supportsDocumentReference: true,\n      supportsObservation: true,\n      supportsCondition: true,\n      supportsMedication: true,\n      supportsAllergy: true,\n      supportsImmunization: true,\n      supportsProcedure: true,\n      supportsBulkData: false,\n      supportsSmartLaunch: true,\n    },\n  },\n};\n\n/**\n * Get provider configuration\n */\nexport function getProviderConfig(provider: EHRProvider): ProviderConfig {\n  return PROVIDER_REGISTRY[provider];\n}\n\n/**\n * Get all supported providers\n */\nexport function getAllProviders(): ProviderConfig[] {\n  return Object.values(PROVIDER_REGISTRY).filter(p => p.id !== EHRProvider.OTHER);\n}\n\n/**\n * Get providers by market share (sorted)\n */\nexport function getProvidersByMarketShare(): ProviderConfig[] {\n  return getAllProviders()\n    .filter(p => p.marketShare)\n    .sort((a, b) => (b.marketShare || 0) - (a.marketShare || 0));\n}\n\n/**\n * Search providers by name\n */\nexport function searchProviders(query: string): ProviderConfig[] {\n  const lowerQuery = query.toLowerCase();\n  return getAllProviders().filter(p =>\n    p.displayName.toLowerCase().includes(lowerQuery) ||\n    p.name.toLowerCase().includes(lowerQuery) ||\n    p.description.toLowerCase().includes(lowerQuery) ||\n    p.patientPortalName?.toLowerCase().includes(lowerQuery)\n  );\n}\n</create-file>\n</function_calls>'}