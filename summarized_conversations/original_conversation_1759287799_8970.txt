{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="medical-analysis-platform/app/api/uploads/route.ts">\n/**\n * File Uploads API\n * \n * GET /api/uploads - Get user\'s upload history\n * DELETE /api/uploads - Cancel upload\n */\n\nimport { NextRequest, NextResponse } from \'next/server\';\nimport { FileUploadService } from \'@/lib/services/FileUploadService\';\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const userId = searchParams.get(\'userId\');\n    const uploadId = searchParams.get(\'uploadId\');\n    const limit = parseInt(searchParams.get(\'limit\') || \'50\');\n    const offset = parseInt(searchParams.get(\'offset\') || \'0\');\n    \n    if (!userId) {\n      return NextResponse.json(\n        { error: \'Missing userId parameter\' },\n        { status: 400 }\n      );\n    }\n    \n    if (uploadId) {\n      // Get specific upload\n      const upload = await FileUploadService.getUpload(uploadId);\n      return NextResponse.json({\n        success: true,\n        upload,\n      });\n    } else {\n      // Get user\'s upload history\n      const result = await FileUploadService.getUserUploads(userId, limit, offset);\n      return NextResponse.json({\n        success: true,\n        ...result,\n      });\n    }\n  } catch (error: any) {\n    console.error(\'Get uploads error:\', error);\n    return NextResponse.json(\n      { error: error.message || \'Failed to get uploads\' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const uploadId = searchParams.get(\'uploadId\');\n    const reason = searchParams.get(\'reason\');\n    \n    if (!uploadId) {\n      return NextResponse.json(\n        { error: \'Missing uploadId parameter\' },\n        { status: 400 }\n      );\n    }\n    \n    const result = await FileUploadService.cancelUpload(uploadId, reason || undefined);\n    \n    return NextResponse.json({\n      success: true,\n      ...result,\n      message: \'Upload cancelled successfully\',\n    });\n  } catch (error: any) {\n    console.error(\'Cancel upload error:\', error);\n    return NextResponse.json(\n      { error: error.message || \'Failed to cancel upload\' },\n      { status: 500 }\n    );\n  }\n}\n</create-file>\n</function_calls>'}