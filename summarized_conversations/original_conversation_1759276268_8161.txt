{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="medical-analysis-platform/components/layout/StatusBar.tsx">\n\'use client\';\n\nimport { useEffect, useState } from \'react\';\nimport { DollarSign, Activity, Server, Clock } from \'lucide-react\';\nimport { cn } from \'@/lib/utils\';\n\ninterface StatusData {\n  totalCost: number;\n  activeTasks: number;\n  activeInstances: number;\n  lastUpdate: string;\n}\n\nexport default function StatusBar() {\n  const [status, setStatus] = useState<StatusData>({\n    totalCost: 0,\n    activeTasks: 0,\n    activeInstances: 0,\n    lastUpdate: new Date().toLocaleTimeString(),\n  });\n\n  const [isOnline, setIsOnline] = useState(true);\n\n  useEffect(() => {\n    // Simulate real-time updates\n    const interval = setInterval(() => {\n      setStatus((prev) => ({\n        ...prev,\n        lastUpdate: new Date().toLocaleTimeString(),\n      }));\n    }, 60000); // Update every minute\n\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className="fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 z-30">\n      <div className={cn(\n        \'flex items-center justify-between px-4 py-2 text-sm\',\n        \'lg:ml-64 transition-all duration-300\'\n      )}>\n        {/* Left Section - Status Indicators */}\n        <div className="flex items-center gap-4">\n          {/* Online Status */}\n          <div className="flex items-center gap-2">\n            <div className={cn(\n              \'w-2 h-2 rounded-full\',\n              isOnline ? \'bg-green-500\' : \'bg-red-500\'\n            )} />\n            <span className="text-gray-600 hidden sm:inline">\n              {isOnline ? \'Online\' : \'Offline\'}\n            </span>\n          </div>\n\n          {/* Active Tasks */}\n          <div className="flex items-center gap-2 text-gray-600">\n            <Activity className="w-4 h-4" />\n            <span className="hidden sm:inline">\n              {status.activeTasks} active {status.activeTasks === 1 ? \'task\' : \'tasks\'}\n            </span>\n            <span className="sm:hidden">{status.activeTasks}</span>\n          </div>\n\n          {/* Active Instances */}\n          <div className="flex items-center gap-2 text-gray-600">\n            <Server className="w-4 h-4" />\n            <span className="hidden sm:inline">\n              {status.activeInstances} {status.activeInstances === 1 ? \'instance\' : \'instances\'}\n            </span>\n            <span className="sm:hidden">{status.activeInstances}</span>\n          </div>\n        </div>\n\n        {/* Right Section - Cost & Time */}\n        <div className="flex items-center gap-4">\n          {/* Total Cost */}\n          <div className="flex items-center gap-2 text-gray-600">\n            <DollarSign className="w-4 h-4" />\n            <span className="font-medium">\n              ${status.totalCost.toFixed(2)}\n            </span>\n            <span className="text-xs text-gray-500 hidden md:inline">today</span>\n          </div>\n\n          {/* Last Update */}\n          <div className="flex items-center gap-2 text-gray-500 text-xs hidden lg:flex">\n            <Clock className="w-3 h-3" />\n            <span>Updated {status.lastUpdate}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n</create-file>\n</function_calls>'}