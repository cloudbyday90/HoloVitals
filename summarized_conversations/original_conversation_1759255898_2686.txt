{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="docs/API_DOCUMENTATION.md">\n# Development & QA Repository System API Documentation\n\n## Overview\n\nThis document provides comprehensive API documentation for the Development & QA Repository System, including Bug Repository, Development & Enhancement Repository, and Development & QA Processing Repository.\n\n---\n\n## Bug Repository API\n\n### Report Bug\n\n**Endpoint:** `POST /api/bugs`\n\n**Description:** Report a new bug in the system.\n\n**Request Body:**\n```json\n{\n  "title": "Login page crashes on mobile",\n  "description": "The login page crashes when accessed from mobile devices",\n  "source": "USER_REPORT",\n  "severity": "HIGH",\n  "category": "UI_UX",\n  "reportedBy": "user123",\n  "reportedByEmail": "user@example.com",\n  "stackTrace": "Error: Cannot read property...",\n  "errorMessage": "TypeError: Cannot read property \'value\' of null",\n  "affectedComponent": "authentication",\n  "environment": "PRODUCTION",\n  "stepsToReproduce": "1. Open mobile browser\\n2. Navigate to login page\\n3. Enter credentials",\n  "expectedBehavior": "Login page should load properly",\n  "actualBehavior": "Page crashes with error",\n  "attachments": ["https://example.com/screenshot.png"]\n}\n```\n\n**Response:**\n```json\n{\n  "success": true,\n  "bug": {\n    "id": "bug_123",\n    "title": "Login page crashes on mobile",\n    "status": "NEW",\n    "severity": "HIGH",\n    "priority": 75,\n    "impactScore": 82.5,\n    "createdAt": "2025-01-15T10:30:00Z"\n  }\n}\n```\n\n### Get Bug Details\n\n**Endpoint:** `GET /api/bugs/:bugId`\n\n**Description:** Get detailed information about a specific bug.\n\n**Response:**\n```json\n{\n  "id": "bug_123",\n  "title": "Login page crashes on mobile",\n  "description": "The login page crashes when accessed from mobile devices",\n  "status": "TRIAGED",\n  "severity": "HIGH",\n  "category": "UI_UX",\n  "priority": 75,\n  "assignedTo": "dev_456",\n  "reportedAt": "2025-01-15T10:30:00Z",\n  "comments": [...],\n  "history": [...]\n}\n```\n\n### Update Bug Status\n\n**Endpoint:** `PATCH /api/bugs/:bugId/status`\n\n**Request Body:**\n```json\n{\n  "status": "IN_PROGRESS",\n  "userId": "dev_456"\n}\n```\n\n**Response:**\n```json\n{\n  "success": true,\n  "bug": {\n    "id": "bug_123",\n    "status": "IN_PROGRESS",\n    "updatedAt": "2025-01-15T11:00:00Z"\n  }\n}\n```\n\n### Get Bug Statistics\n\n**Endpoint:** `GET /api/bugs/statistics`\n\n**Response:**\n```json\n{\n  "total": 150,\n  "open": 45,\n  "critical": 5,\n  "bySeverity": {\n    "CRITICAL": 5,\n    "HIGH": 15,\n    "MEDIUM": 50,\n    "LOW": 60,\n    "TRIVIAL": 20\n  },\n  "byCategory": {\n    "AUTHENTICATION": 10,\n    "UI_UX": 25,\n    "PERFORMANCE": 15,\n    ...\n  },\n  "averageResolutionTime": 48\n}\n```\n\n### Add Bug Comment\n\n**Endpoint:** `POST /api/bugs/:bugId/comments`\n\n**Request Body:**\n```json\n{\n  "authorId": "dev_456",\n  "authorName": "John Developer",\n  "content": "I\'ve identified the root cause...",\n  "isInternal": false\n}\n```\n\n---\n\n## Development & Enhancement Repository API\n\n### Submit Feature Request\n\n**Endpoint:** `POST /api/features`\n\n**Request Body:**\n```json\n{\n  "title": "Add dark mode support",\n  "description": "Implement dark mode across the entire application",\n  "type": "NEW_FEATURE",\n  "priority": "MEDIUM",\n  "requestedBy": "user123",\n  "requestedByEmail": "user@example.com",\n  "businessValue": "Improves user experience and reduces eye strain",\n  "targetAudience": "All users",\n  "expectedImpact": "Increased user satisfaction and engagement",\n  "successMetrics": "User adoption rate, positive feedback",\n  "estimatedEffort": 80,\n  "complexity": 6,\n  "tags": ["ui", "accessibility"]\n}\n```\n\n**Response:**\n```json\n{\n  "success": true,\n  "feature": {\n    "id": "feature_789",\n    "title": "Add dark mode support",\n    "status": "PROPOSED",\n    "priority": "MEDIUM",\n    "createdAt": "2025-01-15T10:30:00Z"\n  }\n}\n```\n\n### Evaluate Feature\n\n**Endpoint:** `POST /api/features/:featureId/evaluate`\n\n**Request Body:**\n```json\n{\n  "approved": true,\n  "priority": "HIGH",\n  "targetRelease": "v2.0",\n  "targetDate": "2025-03-01T00:00:00Z",\n  "feedback": "Approved for next release",\n  "evaluatedBy": "product_manager_1"\n}\n```\n\n### Get Impact Analysis\n\n**Endpoint:** `GET /api/features/:featureId/impact`\n\n**Response:**\n```json\n{\n  "featureId": "feature_789",\n  "technicalImpact": {\n    "complexity": 6,\n    "effort": 80,\n    "risk": "MEDIUM",\n    "dependencies": []\n  },\n  "businessImpact": {\n    "value": 75,\n    "audience": "All users",\n    "expectedOutcome": "Increased user satisfaction"\n  },\n  "resourceImpact": {\n    "developmentTime": 80,\n    "testingTime": 24,\n    "documentationTime": 8\n  },\n  "overallScore": 72\n}\n```\n\n### Create Roadmap\n\n**Endpoint:** `POST /api/roadmaps`\n\n**Request Body:**\n```json\n{\n  "name": "Q1 2025 Roadmap",\n  "description": "Features planned for Q1 2025",\n  "version": "v2.0",\n  "startDate": "2025-01-01T00:00:00Z",\n  "endDate": "2025-03-31T23:59:59Z",\n  "features": ["feature_789", "feature_790"],\n  "goals": ["Improve UX", "Increase performance"]\n}\n```\n\n### Vote on Feature\n\n**Endpoint:** `POST /api/features/:featureId/vote`\n\n**Request Body:**\n```json\n{\n  "userId": "user123",\n  "vote": 1,\n  "comment": "This would be very useful!"\n}\n```\n\n---\n\n## Development & QA Processing Repository API\n\n### Create Development Project\n\n**Endpoint:** `POST /api/projects`\n\n**Request Body:**\n```json\n{\n  "name": "Fix login page crash",\n  "description": "Fix the mobile login page crash issue",\n  "type": "BUG_FIX",\n  "sourceType": "BUG",\n  "sourceId": "bug_123",\n  "assignedTo": "dev_456",\n  "assignedTeam": "frontend-team",\n  "tags": ["bug-fix", "ui-ux", "high-priority"]\n}\n```\n\n**Response:**\n```json\n{\n  "success": true,\n  "project": {\n    "id": "project_001",\n    "name": "Fix login page crash",\n    "status": "PLANNING",\n    "createdAt": "2025-01-15T10:30:00Z",\n    "environments": [\n      {\n        "environment": "DEVELOPMENT",\n        "branch": "dev",\n        "isActive": true\n      },\n      {\n        "environment": "QA",\n        "branch": "qa",\n        "isActive": true\n      }\n    ]\n  }\n}\n```\n\n### Deploy to Environment\n\n**Endpoint:** `POST /api/projects/:projectId/deploy`\n\n**Request Body:**\n```json\n{\n  "environment": "QA",\n  "version": "1.0.0",\n  "branch": "qa",\n  "commitHash": "abc123def456",\n  "deployedBy": "dev_456",\n  "notes": "Deploying bug fix to QA"\n}\n```\n\n**Response:**\n```json\n{\n  "success": true,\n  "deploymentId": "deploy_001",\n  "status": "SUCCESS",\n  "completedAt": "2025-01-15T11:00:00Z"\n}\n```\n\n### Run Tests\n\n**Endpoint:** `POST /api/projects/:projectId/tests`\n\n**Request Body:**\n```json\n{\n  "environment": "QA",\n  "testSuite": "full",\n  "testType": "INTEGRATION",\n  "triggeredBy": "dev_456"\n}\n```\n\n**Response:**\n```json\n{\n  "success": true,\n  "testRunId": "test_001",\n  "results": {\n    "total": 100,\n    "passed": 95,\n    "failed": 5,\n    "skipped": 0,\n    "duration": 30,\n    "coverage": 85.5\n  }\n}\n```\n\n### Rollback Deployment\n\n**Endpoint:** `POST /api/deployments/:deploymentId/rollback`\n\n**Request Body:**\n```json\n{\n  "rolledBackBy": "dev_456"\n}\n```\n\n### Get Project Status\n\n**Endpoint:** `GET /api/projects/:projectId/status`\n\n**Response:**\n```json\n{\n  "project": {\n    "id": "project_001",\n    "name": "Fix login page crash",\n    "status": "TESTING"\n  },\n  "environments": [...],\n  "deployments": [...],\n  "testRuns": [...],\n  "codeChanges": [...],\n  "summary": {\n    "totalDeployments": 5,\n    "successfulDeployments": 4,\n    "totalTests": 500,\n    "passedTests": 475,\n    "totalCodeChanges": 15,\n    "reviewedChanges": 12\n  }\n}\n```\n\n### Track Code Change\n\n**Endpoint:** `POST /api/projects/:projectId/code-changes`\n\n**Request Body:**\n```json\n{\n  "type": "MODIFY",\n  "filePath": "src/components/Login.tsx",\n  "commitHash": "abc123",\n  "commitMessage": "Fix mobile login crash",\n  "branch": "dev",\n  "author": "dev_456",\n  "linesAdded": 15,\n  "linesRemoved": 8,\n  "complexity": 3\n}\n```\n\n---\n\n## Repository Coordinator API\n\n### Process Bug Report (Full Workflow)\n\n**Endpoint:** `POST /api/coordinator/process-bug`\n\n**Request Body:**\n```json\n{\n  "title": "Login page crashes on mobile",\n  "description": "The login page crashes when accessed from mobile devices",\n  "source": "USER_REPORT",\n  "severity": "CRITICAL",\n  "category": "UI_UX"\n}\n```\n\n**Response:**\n```json\n{\n  "success": true,\n  "message": "Bug processed and development project created",\n  "data": {\n    "bug": {...},\n    "enhancement": {...},\n    "project": {...}\n  }\n}\n```\n\n### Process Feature Request (Full Workflow)\n\n**Endpoint:** `POST /api/coordinator/process-feature`\n\n**Request Body:**\n```json\n{\n  "title": "Add dark mode support",\n  "description": "Implement dark mode across the entire application",\n  "type": "NEW_FEATURE",\n  "priority": "MEDIUM"\n}\n```\n\n### Complete and Deploy\n\n**Endpoint:** `POST /api/coordinator/complete-deploy/:projectId`\n\n**Request Body:**\n```json\n{\n  "deployedBy": "dev_456"\n}\n```\n\n**Response:**\n```json\n{\n  "success": true,\n  "message": "Project completed and deployed successfully",\n  "data": {\n    "testResult": {...},\n    "stagingDeployment": {...},\n    "stagingTestResult": {...}\n  }\n}\n```\n\n### Get System Report\n\n**Endpoint:** `GET /api/coordinator/system-report`\n\n**Response:**\n```json\n{\n  "timestamp": "2025-01-15T12:00:00Z",\n  "bugs": {\n    "total": 150,\n    "open": 45,\n    "critical": 5\n  },\n  "features": {\n    "total": 75,\n    "inProgress": 12,\n    "completed": 50\n  },\n  "projects": {\n    "total": 30,\n    "active": 8,\n    "completed": 20\n  },\n  "summary": {\n    "openBugs": 45,\n    "criticalBugs": 5,\n    "featuresInProgress": 12,\n    "activeProjects": 8\n  }\n}\n```\n\n### Get High Priority Items\n\n**Endpoint:** `GET /api/coordinator/high-priority`\n\n**Response:**\n```json\n{\n  "criticalBugs": [...],\n  "highPriorityBugs": [...],\n  "criticalFeatures": [...]\n}\n```\n\n---\n\n## Notification API\n\n### Send Notification\n\n**Endpoint:** `POST /api/notifications`\n\n**Request Body:**\n```json\n{\n  "type": "BUG_CRITICAL",\n  "priority": "URGENT",\n  "recipientId": "dev_456",\n  "recipientEmail": "dev@example.com",\n  "title": "CRITICAL BUG: Login page crashes",\n  "message": "A critical bug has been reported...",\n  "channels": ["EMAIL", "SLACK", "IN_APP"],\n  "actionUrl": "/bugs/bug_123"\n}\n```\n\n### Get User Notifications\n\n**Endpoint:** `GET /api/notifications/user/:userId`\n\n**Query Parameters:**\n- `unreadOnly`: boolean (optional)\n\n**Response:**\n```json\n{\n  "notifications": [\n    {\n      "id": "notif_001",\n      "type": "BUG_ASSIGNED",\n      "title": "New Bug Assigned",\n      "message": "A HIGH bug has been assigned to you",\n      "read": false,\n      "createdAt": "2025-01-15T10:30:00Z",\n      "actionUrl": "/bugs/bug_123"\n    }\n  ]\n}\n```\n\n### Update Notification Preferences\n\n**Endpoint:** `PUT /api/notifications/preferences`\n\n**Request Body:**\n```json\n{\n  "userId": "dev_456",\n  "channels": ["EMAIL", "IN_APP"],\n  "bugNotifications": true,\n  "featureNotifications": true,\n  "deploymentNotifications": true,\n  "systemAlerts": true,\n  "emailDigest": true,\n  "digestFrequency": "DAILY"\n}\n```\n\n---\n\n## Error Responses\n\nAll endpoints may return the following error responses:\n\n### 400 Bad Request\n```json\n{\n  "success": false,\n  "error": "Invalid request data",\n  "details": "Missing required field: title"\n}\n```\n\n### 401 Unauthorized\n```json\n{\n  "success": false,\n  "error": "Unauthorized",\n  "message": "Authentication required"\n}\n```\n\n### 403 Forbidden\n```json\n{\n  "success": false,\n  "error": "Forbidden",\n  "message": "Insufficient permissions"\n}\n```\n\n### 404 Not Found\n```json\n{\n  "success": false,\n  "error": "Not found",\n  "message": "Resource not found"\n}\n```\n\n### 500 Internal Server Error\n```json\n{\n  "success": false,\n  "error": "Internal server error",\n  "message": "An unexpected error occurred"\n}\n```\n\n---\n\n## Rate Limiting\n\nAll API endpoints are rate-limited to prevent abuse:\n\n- **Standard endpoints:** 100 requests per minute per user\n- **Bulk operations:** 10 requests per minute per user\n- **System monitoring:** 1000 requests per minute (internal only)\n\nRate limit headers are included in all responses:\n```\nX-RateLimit-Limit: 100\nX-RateLimit-Remaining: 95\nX-RateLimit-Reset: 1642248000\n```\n\n---\n\n## Authentication\n\nAll API endpoints require authentication using JWT tokens:\n\n```\nAuthorization: Bearer <jwt_token>\n```\n\nTokens are obtained through the authentication service and are valid for 15 minutes. Refresh tokens can be used to obtain new access tokens.\n\n---\n\n## Webhooks\n\nThe system supports webhooks for real-time notifications:\n\n### Configure Webhook\n\n**Endpoint:** `POST /api/webhooks`\n\n**Request Body:**\n```json\n{\n  "url": "https://your-app.com/webhook",\n  "events": ["BUG_CREATED", "DEPLOYMENT_SUCCESS", "TEST_FAILED"],\n  "secret": "your_webhook_secret"\n}\n```\n\n### Webhook Payload Example\n\n```json\n{\n  "event": "BUG_CREATED",\n  "timestamp": "2025-01-15T10:30:00Z",\n  "data": {\n    "bugId": "bug_123",\n    "title": "Login page crashes",\n    "severity": "CRITICAL"\n  },\n  "signature": "sha256=..."\n}\n```\n\n---\n\n## Best Practices\n\n1. **Always check response status codes** before processing data\n2. **Implement retry logic** for failed requests with exponential backoff\n3. **Use pagination** for list endpoints to avoid large responses\n4. **Cache responses** where appropriate to reduce API calls\n5. **Validate input data** before sending requests\n6. **Handle rate limits** gracefully with proper error handling\n7. **Use webhooks** for real-time updates instead of polling\n8. **Secure webhook endpoints** by validating signatures\n9. **Monitor API usage** to stay within rate limits\n10. **Keep authentication tokens secure** and refresh them regularly\n</create-file>\n</function_calls>'}