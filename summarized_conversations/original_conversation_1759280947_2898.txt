{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="medical-analysis-platform/app/api/admin/errors/stats/route.ts">\n/**\n * Error Statistics API\n * OWNER/ADMIN only - Get error statistics\n */\n\nimport { NextRequest, NextResponse } from \'next/server\';\nimport { requireAdmin } from \'@/lib/middleware/auth\';\nimport { errorLogger } from \'@/lib/errors/ErrorLogger\';\n\nexport async function GET(req: NextRequest) {\n  // Protect endpoint - ADMIN or higher\n  const user = await requireAdmin(req);\n  if (user instanceof NextResponse) {\n    return user;\n  }\n\n  try {\n    const { searchParams } = new URL(req.url);\n    const range = searchParams.get(\'range\') || \'24h\';\n\n    // Convert range to hours\n    let hours = 24;\n    switch (range) {\n      case \'1h\':\n        hours = 1;\n        break;\n      case \'24h\':\n        hours = 24;\n        break;\n      case \'7d\':\n        hours = 24 * 7;\n        break;\n      case \'30d\':\n        hours = 24 * 30;\n        break;\n    }\n\n    // Get error statistics\n    const stats = await errorLogger.getErrorStats(hours);\n\n    // Calculate trend (compare with previous period)\n    const previousStats = await errorLogger.getErrorStats(hours * 2);\n    const previousTotal = previousStats.total - stats.total;\n    const trend = {\n      current: stats.total,\n      previous: previousTotal,\n      change: previousTotal > 0 \n        ? Math.round(((stats.total - previousTotal) / previousTotal) * 100)\n        : 0,\n    };\n\n    return NextResponse.json({\n      ...stats,\n      trend,\n    });\n  } catch (error) {\n    console.error(\'Failed to get error stats:\', error);\n    return NextResponse.json(\n      { error: \'Failed to get error statistics\' },\n      { status: 500 }\n    );\n  }\n}\n</create-file>\n</function_calls>'}