{'role': 'assistant', 'content': 'Now let me add the database schema for context optimization tracking:\n\n\n<function_calls>\n<str-replace file_path="medical-analysis-platform/prisma/schema.prisma">\n    <old_str>model AIContextCache {\n  id                String   @id @default(cuid())\n  userId            String\n  contextHash       String   @unique\n  sanitizedContext  String   @db.Text\n  importanceScore   Float\n  lastAccessed      DateTime @default(now())\n  accessCount       Int      @default(1)\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([importanceScore])\n  @@index([lastAccessed])\n}</old_str>\n    <new_str>model AIContextCache {\n  id                String   @id @default(cuid())\n  userId            String\n  contextHash       String   @unique\n  sanitizedContext  String   @db.Text\n  importanceScore   Float\n  lastAccessed      DateTime @default(now())\n  accessCount       Int      @default(1)\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([importanceScore])\n  @@index([lastAccessed])\n}\n\nmodel ContextOptimization {\n  id                  String   @id @default(cuid())\n  userId              String\n  originalTokens      Int\n  optimizedTokens     Int\n  reductionPercentage Float\n  strategy            String\n  compressionRatio    Float\n  relevanceScore      Float\n  informationDensity  Float\n  processingTimeMs    Int\n  qualityScore        Float\n  createdAt           DateTime @default(now())\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([createdAt])\n  @@index([strategy])\n}</new_str>\n</str-replace>\n</function_calls>\n</function_calls>'}