{'role': 'assistant', 'content': '<function_calls>\n<str-replace file_path="todo.md">\n<old_str>## Estimated Time for Phase 2b: 1 week\n\n---\n\n### 2.1 Epic-Specific Resource Types [x]</old_str>\n<new_str>## Estimated Time for Phase 2b: 1 week\n\n---\n\n## Phase 2c: Cerner-Specific Features (Current) ðŸ”„ IN PROGRESS\n\n### 2c.1 Cerner-Specific Resource Types [ ]\n- [ ] Implement DiagnosticReport support (lab results, imaging reports)\n- [ ] Implement CarePlan support (treatment plans, care coordination)\n- [ ] Implement Encounter support (visits, appointments, hospitalizations)\n- [ ] Implement Provenance support (data source tracking - unique to Cerner)\n- [ ] Implement Coverage support (insurance information - unique to Cerner)\n- [ ] Add Cerner-specific extensions handling\n\n### 2c.2 Cerner Bulk Data Export [ ]\n- [ ] Implement FHIR Bulk Data Export ($export operation)\n- [ ] Support Patient-level export\n- [ ] Support Group-level export\n- [ ] Handle NDJSON format parsing\n- [ ] Implement polling for export completion\n- [ ] Download and process export files\n\n### 2c.3 Oracle Health (Cerner) Integration [ ]\n- [ ] Research Oracle Health API requirements\n- [ ] Document production app registration process\n- [ ] Create Cerner-specific configuration guide\n- [ ] Add Oracle Health metadata\n- [ ] Document multi-tenant architecture\n\n### 2c.4 Cerner-Specific Optimizations [ ]\n- [ ] Implement Cerner preferred search parameters\n- [ ] Add Cerner-specific rate limiting (8-10 req/sec)\n- [ ] Optimize pagination for Cerner response sizes\n- [ ] Handle Cerner-specific error codes\n- [ ] Implement Cerner recommended retry logic\n- [ ] Support multi-tenant architecture (tenant ID)\n\n### 2c.5 Enhanced Data Extraction [ ]\n- [ ] Extract clinical notes from DiagnosticReport\n- [ ] Parse lab results with reference ranges\n- [ ] Extract imaging study metadata\n- [ ] Process care plan activities and goals\n- [ ] Extract encounter diagnoses and procedures\n- [ ] Extract provenance information (data source tracking)\n- [ ] Extract insurance coverage information\n\n### 2c.6 Cerner Service Extensions [ ]\n- [ ] Create CernerEnhancedService extending EHRSyncService\n- [ ] Add bulk export methods\n- [ ] Add enhanced resource fetching\n- [ ] Add Cerner-specific data transformations\n- [ ] Add multi-tenant support\n\n### 2c.7 API Endpoints [ ]\n- [ ] POST /api/ehr/cerner/bulk-export - Initiate bulk export\n- [ ] GET /api/ehr/cerner/bulk-export/:id - Check export status\n- [ ] POST /api/ehr/cerner/enhanced-sync - Enhanced sync with all resources\n- [ ] GET /api/ehr/cerner/capabilities - Get Cerner-specific capabilities\n\n### 2c.8 Database Schema Updates [ ]\n- [ ] Verify bulk_export_jobs table supports Cerner\n- [ ] Reuse epic_specific_data table for Cerner extensions\n- [ ] Update fhir_resources table with Cerner-specific fields\n- [ ] Add indexes for Cerner-specific queries\n\n### 2c.9 Documentation [ ]\n- [ ] Create CERNER_INTEGRATION.md guide\n- [ ] Document bulk export process\n- [ ] Document Oracle Health registration\n- [ ] Add Cerner-specific examples\n- [ ] Create troubleshooting guide\n- [ ] Document multi-tenant architecture\n\n## Success Criteria for Phase 2c (Cerner-Specific)\n- [ ] All Cerner-specific resource types supported\n- [ ] Bulk export fully functional\n- [ ] Enhanced data extraction working\n- [ ] Multi-tenant support implemented\n- [ ] All tests passing\n- [ ] Complete documentation\n- [ ] Production-ready code\n\n## Estimated Time for Phase 2c: 1 week\n\n---\n\n### 2.1 Epic-Specific Resource Types [x]</new_str>\n</str-replace>\n</function_calls>'}