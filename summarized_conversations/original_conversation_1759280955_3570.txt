{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="medical-analysis-platform/docs/ERROR_MONITORING_DASHBOARD.md">\n# Error Monitoring Dashboard Documentation\n\n## Overview\n\nThe Error Monitoring Dashboard provides real-time visibility into system errors, allowing administrators to quickly identify, diagnose, and respond to issues. The dashboard is accessible only to OWNER and ADMIN roles.\n\n---\n\n## Features\n\n### 1. Real-Time Error Statistics\n\n**Metrics Displayed:**\n- Total errors in selected time range\n- Errors by severity (CRITICAL, HIGH, MEDIUM, LOW)\n- Error trend (comparison with previous period)\n- Top error codes\n- Top error endpoints\n\n**Time Ranges:**\n- Last Hour\n- Last 24 Hours (default)\n- Last 7 Days\n- Last 30 Days\n\n### 2. Error Severity Levels\n\n#### CRITICAL (Red)\n- System failures\n- Database errors\n- Service unavailable\n- Programming errors\n- **Action Required:** Immediate attention\n\n#### HIGH (Orange)\n- Authorization failures\n- HIPAA violations\n- Security issues\n- **Action Required:** Review within 1 hour\n\n#### MEDIUM (Yellow)\n- Not found errors\n- Conflict errors\n- Business logic errors\n- **Action Required:** Review within 24 hours\n\n#### LOW (Blue)\n- Rate limiting\n- Validation errors\n- Expected user errors\n- **Action Required:** Monitor trends\n\n### 3. Error Filtering & Search\n\n**Filters:**\n- Severity filter (All, CRITICAL, HIGH, MEDIUM, LOW)\n- Search by message, code, or endpoint\n- Time range selection\n\n**Search Capabilities:**\n- Full-text search across error messages\n- Error code search\n- Endpoint path search\n\n### 4. Error Export\n\n**Export Format:** CSV  \n**Includes:**\n- Error ID\n- Timestamp\n- Severity\n- Message\n- Error code\n- Status code\n- Endpoint\n- HTTP method\n- User ID\n- IP address\n\n**Use Cases:**\n- Compliance reporting\n- Trend analysis\n- External analysis tools\n- Long-term archival\n\n### 5. Auto-Refresh\n\n- Dashboard auto-refreshes every 30 seconds\n- Manual refresh button available\n- Real-time error monitoring\n\n---\n\n## Access & Permissions\n\n### Required Role\n- **OWNER** - Full access\n- **ADMIN** - Full access\n- **Other roles** - No access (404 page shown)\n\n### URL\n```\n/dashboard/admin/errors\n```\n\n### API Endpoints\n\n#### Get Error Statistics\n```\nGET /api/admin/errors/stats?range=24h\n```\n\n**Response:**\n```json\n{\n  "total": 150,\n  "bySeverity": {\n    "LOW": 80,\n    "MEDIUM": 50,\n    "HIGH": 15,\n    "CRITICAL": 5\n  },\n  "byCode": {\n    "NOT_FOUND": 40,\n    "VALIDATION_ERROR": 30\n  },\n  "byEndpoint": {\n    "/api/documents": 60,\n    "/api/users": 40\n  },\n  "trend": {\n    "current": 150,\n    "previous": 120,\n    "change": 25\n  }\n}\n```\n\n#### Get Recent Errors\n```\nGET /api/admin/errors?limit=50&severity=CRITICAL\n```\n\n**Response:**\n```json\n{\n  "errors": [\n    {\n      "id": "error-123",\n      "severity": "CRITICAL",\n      "message": "Database connection failed",\n      "code": "DB_CONNECTION_ERROR",\n      "statusCode": 503,\n      "endpoint": "/api/documents",\n      "userId": "user-456",\n      "timestamp": "2025-01-30T12:34:56.789Z"\n    }\n  ],\n  "count": 1\n}\n```\n\n#### Export Error Logs\n```\nGET /api/admin/errors/export?range=7d\n```\n\n**Response:** CSV file download\n\n---\n\n## Dashboard Components\n\n### 1. Stats Cards\n\n**Total Errors Card:**\n- Shows total error count\n- Displays trend indicator (up/down arrow)\n- Percentage change vs previous period\n\n**Critical Errors Card:**\n- Red highlight for visibility\n- Count of critical errors\n- "Requires immediate attention" message\n\n**High Severity Card:**\n- Orange highlight\n- Count of high severity errors\n- "Security and authorization issues" message\n\n**Medium/Low Card:**\n- Yellow highlight\n- Combined count\n- "Expected errors and validation issues" message\n\n### 2. Error Distribution Charts\n\n**Top Error Codes:**\n- Bar chart showing most common error codes\n- Percentage of total errors\n- Top 5 error codes displayed\n\n**Top Error Endpoints:**\n- Bar chart showing endpoints with most errors\n- Percentage of total errors\n- Top 5 endpoints displayed\n\n### 3. Recent Errors Table\n\n**Columns:**\n- Severity (badge with icon)\n- Message (truncated)\n- Code (monospace)\n- Endpoint (truncated)\n- Timestamp (localized)\n\n**Features:**\n- Sortable columns\n- Hover highlighting\n- Responsive design\n- Empty state for no errors\n\n### 4. Error Monitoring Widget\n\n**Compact widget for main dashboard:**\n- Total errors (24h)\n- Trend indicator\n- Severity breakdown\n- Status message\n- Link to full dashboard\n\n**Status Messages:**\n- Critical errors detected (red)\n- High severity errors present (orange)\n- System running smoothly (green)\n\n---\n\n## Alert System\n\n### Alert Channels\n\n1. **In-App Notifications**\n   - Sent to all OWNER and ADMIN users\n   - Appears in notification center\n   - Real-time delivery\n\n2. **Slack Integration** (Optional)\n   - Webhook-based alerts\n   - Rich message formatting\n   - Channel configuration\n\n3. **Email Alerts** (Optional)\n   - Sent to configured recipients\n   - HTML formatted\n   - Includes error details\n\n4. **Webhook Alerts** (Optional)\n   - Custom webhook URL\n   - JSON payload\n   - Integration with external systems\n\n### Alert Triggers\n\n**Critical Errors:**\n- All channels enabled\n- Immediate delivery\n- Includes full error details\n\n**High Severity Errors:**\n- In-app notifications only\n- Delivered within 5 minutes\n- Batched if multiple errors\n\n### Alert Configuration\n\n**Environment Variables:**\n```env\nSLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL\nALERT_WEBHOOK_URL=https://your-webhook-endpoint.com/alerts\n```\n\n**API Configuration:**\n```typescript\nPOST /api/admin/errors/alerts\n{\n  "action": "configure",\n  "config": {\n    "channels": ["EMAIL", "SLACK", "IN_APP"],\n    "recipients": ["admin@example.com"],\n    "slackWebhook": "https://...",\n    "webhookUrl": "https://..."\n  }\n}\n```\n\n---\n\n## Usage Examples\n\n### Monitoring Critical Errors\n\n1. Navigate to `/dashboard/admin/errors`\n2. Set severity filter to "Critical"\n3. Review error messages and codes\n4. Click on error for full details\n5. Take corrective action\n6. Monitor for resolution\n\n### Analyzing Error Trends\n\n1. Select "Last 7 Days" time range\n2. Review trend indicator\n3. Check "Top Error Codes" chart\n4. Identify patterns\n5. Export data for analysis\n6. Implement fixes\n\n### Responding to Alerts\n\n1. Receive in-app notification\n2. Click notification to view error\n3. Review error details\n4. Check related errors\n5. Diagnose root cause\n6. Deploy fix\n7. Monitor for recurrence\n\n### Exporting Error Reports\n\n1. Select desired time range\n2. Apply filters if needed\n3. Click "Export" button\n4. Download CSV file\n5. Open in spreadsheet software\n6. Analyze data\n7. Create reports\n\n---\n\n## Best Practices\n\n### 1. Regular Monitoring\n\n- Check dashboard daily\n- Review critical errors immediately\n- Monitor trends weekly\n- Export monthly reports\n\n### 2. Alert Configuration\n\n- Configure Slack for critical errors\n- Set up email for high severity\n- Test alert channels regularly\n- Update recipient lists\n\n### 3. Error Response\n\n- Respond to critical errors within 15 minutes\n- Review high severity within 1 hour\n- Analyze medium/low errors weekly\n- Document recurring issues\n\n### 4. Trend Analysis\n\n- Compare week-over-week trends\n- Identify error patterns\n- Track error reduction\n- Measure fix effectiveness\n\n### 5. Documentation\n\n- Document critical error resolutions\n- Create runbooks for common errors\n- Share learnings with team\n- Update error handling code\n\n---\n\n## Troubleshooting\n\n### Dashboard Not Loading\n\n**Check:**\n1. User has OWNER or ADMIN role\n2. Database connection is working\n3. ErrorLog table exists\n4. Browser console for errors\n\n**Solution:**\n```bash\n# Verify database\nnpx prisma db push\n\n# Check user role\nSELECT email, role FROM "User" WHERE email = \'your-email\';\n```\n\n### No Errors Showing\n\n**Check:**\n1. Time range selection\n2. Severity filter\n3. Search query\n4. Error logs in database\n\n**Solution:**\n```sql\n-- Check if errors exist\nSELECT COUNT(*) FROM "error_logs";\n\n-- Check recent errors\nSELECT * FROM "error_logs" ORDER BY "timestamp" DESC LIMIT 10;\n```\n\n### Export Not Working\n\n**Check:**\n1. User permissions\n2. Database connection\n3. Error log data exists\n4. Browser download settings\n\n**Solution:**\n- Clear browser cache\n- Try different browser\n- Check server logs\n- Verify API endpoint\n\n### Alerts Not Sending\n\n**Check:**\n1. Alert configuration\n2. Webhook URLs\n3. Network connectivity\n4. Error severity level\n\n**Solution:**\n```typescript\n// Test alert configuration\nawait errorAlertService.sendCriticalAlert(\n  \'test-id\',\n  \'Test alert\',\n  { timestamp: new Date() }\n);\n```\n\n---\n\n## Performance Considerations\n\n### Database Queries\n\n- Indexed fields for fast queries\n- Limit results to prevent overload\n- Use pagination for large datasets\n- Cache statistics for 30 seconds\n\n### Auto-Refresh\n\n- 30-second refresh interval\n- Debounced API calls\n- Cancel pending requests on unmount\n- Efficient state updates\n\n### Export Performance\n\n- Stream large datasets\n- Limit export to 10,000 rows\n- Generate CSV server-side\n- Use compression for large files\n\n---\n\n## Security\n\n### Access Control\n\n- OWNER/ADMIN only\n- Protected API endpoints\n- Role verification on every request\n- Audit log for access\n\n### Data Privacy\n\n- No PHI in error logs\n- User IDs anonymized in exports\n- IP addresses masked in reports\n- Secure data transmission\n\n### HIPAA Compliance\n\n- Error logs don\'t contain PHI\n- Access fully audited\n- Data retention policies\n- Secure storage\n\n---\n\n## Integration\n\n### Slack Integration\n\n```env\nSLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL\n```\n\n**Setup:**\n1. Create Slack app\n2. Enable incoming webhooks\n3. Copy webhook URL\n4. Add to environment variables\n5. Restart application\n\n### Email Integration\n\n**Supported Services:**\n- SendGrid\n- AWS SES\n- Mailgun\n- Custom SMTP\n\n**Configuration:**\n```env\nEMAIL_SERVICE=sendgrid\nEMAIL_API_KEY=your-api-key\nEMAIL_FROM=alerts@holovitals.com\nEMAIL_TO=admin@holovitals.com\n```\n\n### Webhook Integration\n\n**Custom Webhook:**\n```env\nALERT_WEBHOOK_URL=https://your-endpoint.com/alerts\n```\n\n**Payload:**\n```json\n{\n  "type": "critical_error",\n  "message": "Database connection failed",\n  "details": {\n    "code": "DB_CONNECTION_ERROR",\n    "endpoint": "/api/documents",\n    "timestamp": "2025-01-30T12:34:56.789Z"\n  }\n}\n```\n\n---\n\n## Metrics & KPIs\n\n### Error Rate\n\n- Total errors per hour/day/week\n- Errors per user\n- Errors per endpoint\n- Error rate trend\n\n### Mean Time To Resolution (MTTR)\n\n- Average time to fix critical errors\n- Average time to fix high severity\n- Trend over time\n- By error type\n\n### Error Distribution\n\n- Percentage by severity\n- Percentage by code\n- Percentage by endpoint\n- Percentage by user\n\n### System Health\n\n- Error-free periods\n- Uptime percentage\n- Service availability\n- Performance impact\n\n---\n\n## Summary\n\nThe Error Monitoring Dashboard provides:\n- ✅ Real-time error visibility\n- ✅ Comprehensive error statistics\n- ✅ Severity-based filtering\n- ✅ Export capabilities\n- ✅ Alert system integration\n- ✅ Trend analysis\n- ✅ HIPAA-compliant logging\n- ✅ Role-based access control\n\n**Access:** `/dashboard/admin/errors` (OWNER/ADMIN only)  \n**Auto-Refresh:** Every 30 seconds  \n**Export:** CSV format  \n**Alerts:** Multiple channels supported  \n</create-file>\n</function_calls>'}