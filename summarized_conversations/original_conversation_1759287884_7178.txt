{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="medical-analysis-platform/app/api/ehr/resources/route.ts">\n/**\n * EHR Resources API\n * \n * GET /api/ehr/resources - Get synced FHIR resources\n */\n\nimport { NextRequest, NextResponse } from \'next/server\';\nimport { EHRSyncService } from \'@/lib/services/EHRSyncService\';\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const connectionId = searchParams.get(\'connectionId\');\n    const resourceType = searchParams.get(\'resourceType\') || undefined;\n    const limit = parseInt(searchParams.get(\'limit\') || \'50\');\n    const offset = parseInt(searchParams.get(\'offset\') || \'0\');\n\n    if (!connectionId) {\n      return NextResponse.json(\n        { error: \'Missing connectionId parameter\' },\n        { status: 400 }\n      );\n    }\n\n    const result = await EHRSyncService.getSyncedResources(\n      connectionId,\n      resourceType,\n      limit,\n      offset\n    );\n\n    return NextResponse.json({\n      success: true,\n      resources: result.resources,\n      total: result.total,\n      limit,\n      offset,\n      hasMore: offset + limit < result.total,\n    });\n  } catch (error: any) {\n    console.error(\'Get resources error:\', error);\n    return NextResponse.json(\n      { error: error.message || \'Failed to get resources\' },\n      { status: 500 }\n    );\n  }\n}\n</create-file>\n</function_calls>'}