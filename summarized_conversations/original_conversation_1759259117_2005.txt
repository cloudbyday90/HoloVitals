{'role': 'assistant', 'content': 'Now let\'s create a comprehensive database setup script:\n\n<function_calls>\n<create-file file_path="medical-analysis-platform/scripts/setup-database.sh">\n#!/bin/bash\n\n# HoloVitals Database Setup Script\n# This script sets up the PostgreSQL database and runs migrations\n\nset -e\n\necho "🏥 HoloVitals Database Setup"\necho "=============================="\necho ""\n\n# Check if .env file exists\nif [ ! -f .env ]; then\n    echo "❌ Error: .env file not found"\n    echo "Please create a .env file based on .env.example"\n    exit 1\nfi\n\n# Load environment variables\nsource .env\n\necho "✅ Environment variables loaded"\necho ""\n\n# Check if DATABASE_URL is set\nif [ -z "$DATABASE_URL" ]; then\n    echo "❌ Error: DATABASE_URL not set in .env"\n    exit 1\nfi\n\necho "📊 Database Configuration:"\necho "  URL: ${DATABASE_URL}"\necho ""\n\n# Generate Prisma Client\necho "🔧 Generating Prisma Client..."\nnpx prisma generate\necho "✅ Prisma Client generated"\necho ""\n\n# Create migration\necho "📝 Creating database migration..."\nnpx prisma migrate dev --name init_holovitals_schema\necho "✅ Migration created and applied"\necho ""\n\n# Seed database (optional)\nif [ -f "prisma/seed.ts" ]; then\n    echo "🌱 Seeding database..."\n    npx prisma db seed\n    echo "✅ Database seeded"\n    echo ""\nfi\n\n# Verify database\necho "🔍 Verifying database schema..."\nnpx prisma db pull --force\necho "✅ Database schema verified"\necho ""\n\necho "🎉 Database setup complete!"\necho ""\necho "Next steps:"\necho "  1. Review the migration in prisma/migrations/"\necho "  2. Start the development server: npm run dev"\necho "  3. Access Prisma Studio: npx prisma studio"\n</create-file>\n</function_calls>'}