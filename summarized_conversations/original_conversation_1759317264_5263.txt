{'role': 'assistant', 'content': '<function_calls>\n<execute-command>\necho \'\n\n// ============================================================================\n// EPIC-SPECIFIC MODELS\n// ============================================================================\n\nmodel BulkExportJob {\n  id                    String            @id @default(uuid())\n  connectionId          String            @map("connection_id")\n  exportType            BulkExportType    @map("export_type")\n  status                BulkExportStatus  @default(INITIATED)\n  \n  // Export URLs\n  kickoffUrl            String?           @map("kickoff_url")\n  statusUrl             String?           @map("status_url")\n  outputUrls            String?           @db.Text @map("output_urls") // JSON array\n  \n  // Export parameters\n  resourceTypes         String?           @db.Text @map("resource_types") // JSON array\n  since                 DateTime?         // Only resources modified after this date\n  \n  // Progress tracking\n  startedAt             DateTime          @default(now()) @map("started_at")\n  completedAt           DateTime?         @map("completed_at")\n  expiresAt             DateTime?         @map("expires_at")\n  \n  // Metrics\n  resourceCount         Int               @default(0) @map("resource_count")\n  totalSize             BigInt            @default(0) @map("total_size") // bytes\n  \n  // Error tracking\n  errorMessage          String?           @db.Text @map("error_message")\n  errorDetails          String?           @db.Text @map("error_details") // JSON\n  \n  // Metadata\n  metadata              String?           @db.Text // JSON: additional export details\n  \n  connection            EHRConnection     @relation(fields: [connectionId], references: [id], onDelete: Cascade)\n  \n  @@index([connectionId])\n  @@index([status])\n  @@index([startedAt])\n  @@map("bulk_export_jobs")\n}\n\nmodel EpicSpecificData {\n  id                    String            @id @default(uuid())\n  resourceId            String            @unique @map("resource_id")\n  \n  // Epic-specific extensions\n  extensions            String?           @db.Text // JSON: Epic FHIR extensions\n  customFields          String?           @db.Text @map("custom_fields") // JSON: Epic custom fields\n  \n  // Enhanced data\n  clinicalNotes         String?           @db.Text @map("clinical_notes")\n  labResultDetails      String?           @db.Text @map("lab_result_details") // JSON\n  imagingMetadata       String?           @db.Text @map("imaging_metadata") // JSON\n  carePlanDetails       String?           @db.Text @map("care_plan_details") // JSON\n  encounterDetails      String?           @db.Text @map("encounter_details") // JSON\n  \n  // Metadata\n  metadata              String?           @db.Text // JSON\n  createdAt             DateTime          @default(now()) @map("created_at")\n  updatedAt             DateTime          @updatedAt @map("updated_at")\n  \n  resource              FHIRResource      @relation(fields: [resourceId], references: [id], onDelete: Cascade)\n  \n  @@index([resourceId])\n  @@map("epic_specific_data")\n}\n\nenum BulkExportType {\n  PATIENT\n  GROUP\n  SYSTEM\n}\n\nenum BulkExportStatus {\n  INITIATED\n  IN_PROGRESS\n  COMPLETED\n  FAILED\n  EXPIRED\n  CANCELLED\n}\n\' >> medical-analysis-platform/prisma/schema.prisma\n</execute-command>\n</function_calls>'}