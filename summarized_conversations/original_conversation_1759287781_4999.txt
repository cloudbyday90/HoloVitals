{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="medical-analysis-platform/lib/config/pricing.ts">\n/**\n * Pricing Configuration for HoloVitals\n * \n * Defines subscription tiers, token costs, and pricing rules\n */\n\nexport enum SubscriptionTier {\n  BASIC = \'BASIC\',\n  PROFESSIONAL = \'PROFESSIONAL\',\n  ENTERPRISE = \'ENTERPRISE\',\n}\n\nexport interface TierConfig {\n  name: string;\n  displayName: string;\n  monthlyPrice: number; // USD\n  monthlyTokens: number; // Tokens per month\n  freeUploadLimit: number; // Bytes (first upload only)\n  features: string[];\n  maxFileSize: number; // Bytes\n  priority: number; // Queue priority (1-5, higher = better)\n  supportLevel: \'email\' | \'priority\' | \'dedicated\';\n}\n\nexport const TIER_CONFIGS: Record<SubscriptionTier, TierConfig> = {\n  [SubscriptionTier.BASIC]: {\n    name: \'BASIC\',\n    displayName: \'Basic\',\n    monthlyPrice: 9.99,\n    monthlyTokens: 100_000, // 100K tokens/month\n    freeUploadLimit: 10 * 1024 * 1024, // 10MB\n    features: [\n      \'100K tokens per month\',\n      \'10MB free initial upload\',\n      \'Basic AI chat support\',\n      \'Document analysis\',\n      \'Email support\',\n      \'Up to 100MB file uploads\',\n    ],\n    maxFileSize: 100 * 1024 * 1024, // 100MB\n    priority: 1,\n    supportLevel: \'email\',\n  },\n  [SubscriptionTier.PROFESSIONAL]: {\n    name: \'PROFESSIONAL\',\n    displayName: \'Professional\',\n    monthlyPrice: 29.99,\n    monthlyTokens: 500_000, // 500K tokens/month\n    freeUploadLimit: 25 * 1024 * 1024, // 25MB\n    features: [\n      \'500K tokens per month\',\n      \'25MB free initial upload\',\n      \'Advanced AI analysis\',\n      \'Priority processing\',\n      \'Batch document processing\',\n      \'Priority email support\',\n      \'Up to 500MB file uploads\',\n    ],\n    maxFileSize: 500 * 1024 * 1024, // 500MB\n    priority: 3,\n    supportLevel: \'priority\',\n  },\n  [SubscriptionTier.ENTERPRISE]: {\n    name: \'ENTERPRISE\',\n    displayName: \'Enterprise\',\n    monthlyPrice: 99.99,\n    monthlyTokens: 2_000_000, // 2M tokens/month\n    freeUploadLimit: 100 * 1024 * 1024, // 100MB\n    features: [\n      \'2M tokens per month\',\n      \'100MB free initial upload\',\n      \'Premium AI models (GPT-4, Claude 3.5)\',\n      \'Highest priority processing\',\n      \'Unlimited batch processing\',\n      \'Advanced analytics\',\n      \'Dedicated support\',\n      \'Up to 1GB file uploads\',\n      \'Custom integrations\',\n    ],\n    maxFileSize: 1024 * 1024 * 1024, // 1GB\n    priority: 5,\n    supportLevel: \'dedicated\',\n  },\n};\n\n/**\n * Token costs for different operations\n * Based on average token usage per operation type\n */\nexport interface TokenCosts {\n  // Per MB of document processing\n  documentProcessing: number;\n  \n  // Per chat message (average)\n  chatMessage: number;\n  \n  // Per document analysis (full report)\n  documentAnalysis: number;\n  \n  // Per context optimization operation\n  contextOptimization: number;\n  \n  // Per batch processing job\n  batchProcessing: number;\n}\n\nexport const TOKEN_COSTS: TokenCosts = {\n  // Document processing: ~1,000 tokens per MB (OCR + extraction)\n  documentProcessing: 1_000,\n  \n  // Chat message: ~500 tokens average (prompt + response)\n  chatMessage: 500,\n  \n  // Full document analysis: ~5,000 tokens (comprehensive report)\n  documentAnalysis: 5_000,\n  \n  // Context optimization: ~100 tokens (compression analysis)\n  contextOptimization: 100,\n  \n  // Batch processing: ~10,000 tokens per job\n  batchProcessing: 10_000,\n};\n\n/**\n * Token purchase packages (one-time add-ons)\n */\nexport interface TokenPackage {\n  tokens: number;\n  price: number; // USD\n  bonus: number; // Bonus tokens\n  displayName: string;\n}\n\nexport const TOKEN_PACKAGES: TokenPackage[] = [\n  {\n    tokens: 50_000,\n    price: 4.99,\n    bonus: 0,\n    displayName: \'50K Tokens\',\n  },\n  {\n    tokens: 100_000,\n    price: 9.99,\n    bonus: 5_000,\n    displayName: \'100K Tokens + 5K Bonus\',\n  },\n  {\n    tokens: 250_000,\n    price: 24.99,\n    bonus: 25_000,\n    displayName: \'250K Tokens + 25K Bonus\',\n  },\n  {\n    tokens: 500_000,\n    price: 49.99,\n    bonus: 75_000,\n    displayName: \'500K Tokens + 75K Bonus\',\n  },\n  {\n    tokens: 1_000_000,\n    price: 99.99,\n    bonus: 200_000,\n    displayName: \'1M Tokens + 200K Bonus\',\n  },\n];\n\n/**\n * File size to token estimation\n * More accurate estimation based on file type and content\n */\nexport interface FileEstimation {\n  baseTokensPerMB: number;\n  ocrMultiplier: number; // If OCR is needed\n  analysisMultiplier: number; // If full analysis is requested\n}\n\nexport const FILE_ESTIMATION: Record<string, FileEstimation> = {\n  // PDF files\n  \'application/pdf\': {\n    baseTokensPerMB: 1_000,\n    ocrMultiplier: 1.5, // OCR adds 50% more tokens\n    analysisMultiplier: 2.0, // Full analysis doubles token usage\n  },\n  \n  // Image files (require OCR)\n  \'image/jpeg\': {\n    baseTokensPerMB: 500,\n    ocrMultiplier: 2.0, // OCR is primary operation\n    analysisMultiplier: 1.5,\n  },\n  \'image/png\': {\n    baseTokensPerMB: 500,\n    ocrMultiplier: 2.0,\n    analysisMultiplier: 1.5,\n  },\n  \n  // Text files (most efficient)\n  \'text/plain\': {\n    baseTokensPerMB: 800,\n    ocrMultiplier: 1.0, // No OCR needed\n    analysisMultiplier: 1.5,\n  },\n  \n  // Default for unknown types\n  \'default\': {\n    baseTokensPerMB: 1_000,\n    ocrMultiplier: 1.5,\n    analysisMultiplier: 2.0,\n  },\n};\n\n/**\n * Pricing rules and constants\n */\nexport const PRICING_RULES = {\n  // Grace period for expired subscriptions (days)\n  GRACE_PERIOD_DAYS: 7,\n  \n  // Minimum token balance to process files\n  MINIMUM_BALANCE: 1_000,\n  \n  // Maximum months for multi-month processing\n  MAX_PROCESSING_MONTHS: 12,\n  \n  // Token cost per dollar (for display purposes)\n  TOKENS_PER_DOLLAR: 10_000,\n  \n  // Discount for annual subscriptions (%)\n  ANNUAL_DISCOUNT: 20,\n  \n  // Referral bonus tokens\n  REFERRAL_BONUS: 10_000,\n  \n  // Trial period (days)\n  TRIAL_PERIOD_DAYS: 14,\n  \n  // Trial tokens\n  TRIAL_TOKENS: 10_000,\n};\n\n/**\n * Helper function to get tier configuration\n */\nexport function getTierConfig(tier: SubscriptionTier): TierConfig {\n  return TIER_CONFIGS[tier];\n}\n\n/**\n * Helper function to calculate annual price with discount\n */\nexport function getAnnualPrice(tier: SubscriptionTier): number {\n  const config = getTierConfig(tier);\n  const annualPrice = config.monthlyPrice * 12;\n  const discount = annualPrice * (PRICING_RULES.ANNUAL_DISCOUNT / 100);\n  return annualPrice - discount;\n}\n\n/**\n * Helper function to format price\n */\nexport function formatPrice(price: number): string {\n  return `$${price.toFixed(2)}`;\n}\n\n/**\n * Helper function to format tokens\n */\nexport function formatTokens(tokens: number): string {\n  if (tokens >= 1_000_000) {\n    return `${(tokens / 1_000_000).toFixed(1)}M`;\n  }\n  if (tokens >= 1_000) {\n    return `${(tokens / 1_000).toFixed(0)}K`;\n  }\n  return tokens.toString();\n}\n\n/**\n * Helper function to format file size\n */\nexport function formatFileSize(bytes: number): string {\n  if (bytes >= 1024 * 1024 * 1024) {\n    return `${(bytes / (1024 * 1024 * 1024)).toFixed(2)} GB`;\n  }\n  if (bytes >= 1024 * 1024) {\n    return `${(bytes / (1024 * 1024)).toFixed(2)} MB`;\n  }\n  if (bytes >= 1024) {\n    return `${(bytes / 1024).toFixed(2)} KB`;\n  }\n  return `${bytes} bytes`;\n}\n</create-file>\n</function_calls>'}