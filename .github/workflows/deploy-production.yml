name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allow manual deployment

jobs:
  deploy:
    name: Deploy to holovitals.net
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: medical-analysis-platform/package-lock.json
          
      - name: Install dependencies
        working-directory: medical-analysis-platform
        run: npm ci
        
      - name: Generate Prisma Client
        working-directory: medical-analysis-platform
        run: npx prisma generate
        
      - name: Build application
        working-directory: medical-analysis-platform
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            # Navigate to application directory
            cd ~/HoloVitals
            
            # Create backup before deployment
            timestamp=$(date +%Y%m%d_%H%M%S)
            mkdir -p ~/holovitals-backups
            tar -czf ~/holovitals-backups/backup_${timestamp}.tar.gz .next node_modules
            
            # Pull latest code
            git fetch origin
            git reset --hard origin/main
            
            # Install dependencies
            npm ci
            
            # Generate Prisma client
            npx prisma generate
            
            # Run database migrations
            npx prisma migrate deploy
            
            # Build application
            npm run build
            
            # Restart application
            pm2 restart holovitals || pm2 start npm --name holovitals -- start
            
            # Health check
            sleep 5
            curl -f http://localhost:3000/api/health || exit 1
            
            echo "âœ… Deployment completed successfully!"
            
      - name: Notify deployment status
        if: always()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ðŸš€ Deployment to holovitals.net
            
            Status: ${{ job.status }}
            Commit: ${{ github.sha }}
            Author: ${{ github.actor }}
            Message: ${{ github.event.head_commit.message }}
            
            Time: ${{ github.event.head_commit.timestamp }}