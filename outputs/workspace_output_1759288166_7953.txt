model SyncHistory {
  id                    String            @id @default(uuid())
  connectionId          String            @map("connection_id")
  status                SyncStatus        @default(QUEUED)
  syncType              String            @default("incremental") @map("sync_type") // incremental, full
  
  // Sync metrics
  startedAt             DateTime?         @map("started_at")
  completedAt           DateTime?         @map("completed_at")
  duration              Int?              // seconds
  
  // Resources synced
  resourcesQueried      Int               @default(0) @map("resources_queried")
  resourcesCreated      Int               @default(0) @map("resources_created")
  resourcesUpdated      Int               @default(0) @map("resources_updated")
  resourcesSkipped      Int               @default(0) @map("resources_skipped")
  resourcesFailed       Int               @default(0) @map("resources_failed")
  
  // Documents downloaded
  documentsDownloaded   Int               @default(0) @map("documents_downloaded")
  totalBytesDownloaded  BigInt            @default(0) @map("total_bytes_downloaded")
  
  // Cost tracking
  tokensEstimated       Int?              @map("tokens_estimated")
  tokensUsed            Int?              @map("tokens_used")
  costEstimated         Float?            @map("cost_estimated")
  costActual            Float?            @map("cost_actual")
  
  // Error tracking
  errorMessage          String?           @db.Text @map("error_message")
  errorDetails          String?           @db.Text @map("error_details") // JSON
  
  // Metadata
  metadata              String?           @db.Text // JSON: sync details, resource types synced, etc.
  createdAt             DateTime          @default(now()) @map("created_at")
  
  connection            EHRConnection     @relation(fields: [connectionId], references: [id], onDelete: Cascade)
  
  @@index([connectionId])
  @@index([status])
